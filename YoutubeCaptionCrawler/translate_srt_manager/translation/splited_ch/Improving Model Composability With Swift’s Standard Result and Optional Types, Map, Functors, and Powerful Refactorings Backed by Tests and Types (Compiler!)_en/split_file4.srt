104
00:03:38,866 --> 00:03:40,766
對於 Failure 類型的 protocol

105
00:03:40,766 --> 00:03:43,200
所以這樣應該就可以了，讓我們開始運行

106
00:03:43,200 --> 00:03:43,900
測試

107
00:03:43,900 --> 00:03:46,300
好的，建構成功並且測試

108
00:03:46,300 --> 00:03:47,333
通過了，並且沒有

109
00:03:47,333 --> 00:03:50,466
需要額外的變更，太棒了，讓我們

110
00:03:50,466 --> 00:03:51,333
提交

111
00:03:51,333 --> 00:03:54,066
所以我們使用自定義的 LoadFeedResult 枚舉

112
00:03:54,066 --> 00:03:55,266
代替標準的

113
00:03:55,266 --> 00:03:58,766
Swift Result，我們現在可以進行的另一個改進是

114
00:03:58,766 --> 00:03:59,566
現在實施

115
00:03:59,566 --> 00:04:02,133
將 LoadFeedResult 嵌入

116
00:04:02,133 --> 00:04:03,433
FeedLoader 協議中

117
00:04:03,433 --> 00:04:05,500
因為他們有密切的關係，我們

118
00:04:05,500 --> 00:04:06,633
只需要這樣調用

119
00:04:06,633 --> 00:04:08,933
現在只需調用 Result，因為它已經在範疇內

120
00:04:08,933 --> 00:04:11,666
FeedLoader 中

121
00:04:11,666 --> 00:04:14,466
但是由於此結果與標準類型 Result 名稱

122
00:04:14,466 --> 00:04:16,000
發生衝突

123
00:04:16,000 --> 00:04:18,366
我們可以添加 Swift 模塊名稱以幫助

124
00:04:18,366 --> 00:04:19,833
編譯器理解

125
00:04:19,833 --> 00:04:21,900
這種類型的聲明，對，我真的很喜歡

126
00:04:21,900 --> 00:04:23,666
從客戶的角度看這種變化

127
00:04:23,666 --> 00:04:24,300
視圖

128
00:04:24,300 --> 00:04:26,800
它現在讀取 FeedLoader.Result，這在

129
00:04:26,800 --> 00:04:28,233
描述方面好多了

130
00:04:28,233 --> 00:04:30,700
確實，但這是一個破壞性的變更