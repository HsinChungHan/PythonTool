369
00:13:36,633 --> 00:13:38,933
你不再需要移動這段程式碼

370
00:13:38,933 --> 00:13:39,733
於do裡面

371
00:13:39,733 --> 00:13:43,166
這裡我們認為這是捕捉塊

372
00:13:43,166 --> 00:13:43,833
closure

373
00:13:43,833 --> 00:13:46,533
因為當你在捕捉的closure裡面丟出錯誤

374
00:13:46,533 --> 00:13:47,666
捕捉的closure

375
00:13:47,666 --> 00:13:50,133
它會自動將其包裹為一個失敗

376
00:13:50,133 --> 00:13:50,800
case

377
00:13:50,800 --> 00:13:53,100
屬於 Result 類型，所以我們的失敗就走了

378
00:13:53,100 --> 00:13:53,833
failure

379
00:13:53,833 --> 00:13:57,033
準確地完成，我們不需要去

380
00:13:57,033 --> 00:13:57,666
invoke

381
00:13:57,666 --> 00:14:01,033
這個完成，因為它包裹返回的

382
00:14:01,033 --> 00:14:01,833
values

383
00:14:01,833 --> 00:14:06,933
在一個成功的 case 裡面，讓我們執行測試

384
00:14:06,933 --> 00:14:09,900
很好，我們甚至可以省略所有的

385
00:14:09,900 --> 00:14:10,933
if else

386
00:14:10,933 --> 00:14:13,733
statements 通過將optional

387
00:14:13,733 --> 00:14:15,033
回傳值進行映射

388
00:14:15,033 --> 00:14:18,533
在定義的方法中

389
00:14:18,533 --> 00:14:22,300
讓我們再跑一次測試全部通過了

390
00:14:22,300 --> 00:14:25,433
我們甚至可以省略捕捉擋的名稱

391
00:14:25,433 --> 00:14:28,800
以及 cache 的命名參數，只用

392
00:14:28,800 --> 00:14:30,300
$0

393
00:14:30,300 --> 00:14:33,033
完全正確，非常好，讓我們再次執行

394
00:14:33,033 --> 00:14:34,933
測試

395
00:14:34,933 --> 00:14:36,700
這看起來好多了，這段程式碼裡沒有

396
00:14:36,700 --> 00:14:38,133
branching

397
00:14:38,133 --> 00:14:40,700
完全正確，我們只是組成並鏈接這些

398
00:14:40,700 --> 00:14:41,500
操作
