347
00:37:41,440 --> 00:37:47,280
所以這就是堆疊追蹤在Crash報告中的呈現方式。

348
00:37:47,280 --> 00:37:51,980
它們包含了所有從入口點開始的函數調用。

349
00:37:51,980 --> 00:38:01,560
所以從start function開始，到每一個涉及的函數，一直到你的，你的明確

350
00:38:01,560 --> 00:38:02,560
code。

351
00:38:02,560 --> 00:38:11,980
所以你可以在這裡看到一堆系統框架，然後是我們自己的code。

352
00:38:11,980 --> 00:38:19,200
我們獲得了每個運行線程的堆疊追蹤。

353
00:38:19,200 --> 00:38:26,380
所以對，我再次提到這個入口點，像start function，然後我們調用

354
00:38:26,380 --> 00:38:29,280
從EssentialApp開始的Main。

355
00:38:29,280 --> 00:38:36,180
然後是UIApplication Main，你的應用程序運行，然後RunLoop開始。

356
00:38:36,180 --> 00:38:45,680
所以這類似於，每個iOS應用或大部分iOS

357
00:38:45,680 --> 00:38:48,860
我們擁有的應用的共同入口點。