186
00:06:59,500 --> 00:07:03,500
程式碼的順序由排列部分變更為

187
00:07:03,500 --> 00:07:07,066
先前的動作部分

188
00:07:07,066 --> 00:07:09,100
client.error stub

189
00:07:09,100 --> 00:07:12,400
是排列範疇的一部分，

190
00:07:12,400 --> 00:07:14,466
現在 client.completions 屬於

191
00:07:14,466 --> 00:07:15,500
動作部分

192
00:07:15,500 --> 00:07:18,300
這是行動，這很有意義

193
00:07:18,300 --> 00:07:19,500
當客戶端

194
00:07:19,500 --> 00:07:22,066
以錯誤完成時，我們希望

195
00:07:22,066 --> 00:07:22,800
載入也完成錯誤，所以我

196
00:07:22,800 --> 00:07:24,800
相信這個測試告訴了真相

197
00:07:24,800 --> 00:07:26,533
畢竟完成是在你

198
00:07:26,533 --> 00:07:29,033
呼叫載入之後才會產生的

199
00:07:29,033 --> 00:07:30,066
確實，所以我對此感到滿意，但是現在我

200
00:07:30,066 --> 00:07:32,700
認為這並不易讀

201
00:07:32,700 --> 00:07:34,233
它看起來並不像之前那麼整潔

202
00:07:34,233 --> 00:07:36,533
因為我們需要從一個

203
00:07:36,533 --> 00:07:38,400
陣列中取值

204
00:07:38,400 --> 00:07:38,933
好的，但我們可以解決這個問題

205
00:07:38,933 --> 00:07:41,100
好，讓我們來

206
00:07:41,100 --> 00:07:44,533
提交並嘗試解決這個問題

207
00:07:44,533 --> 00:07:47,900
通過捕獲來替代 stubbing

208
00:07:47,900 --> 00:07:51,166
讓我們看看我們是否能夠

209
00:07:51,166 --> 00:07:51,900
改善 