434
00:16:25,600 --> 00:16:27,900
但我認為這在測試過後的重置

435
00:16:27,900 --> 00:16:29,600
可能會讓【代碼】的讀者感到困惑

436
00:16:29,600 --> 00:16:30,233
代碼

437
00:16:30,233 --> 00:16:32,800
那麼，為何我們不是重置，

438
00:16:32,800 --> 00:16:34,466
而是執行這個

439
00:16:34,466 --> 00:16:37,333
適用於所有情況，然後我們希望

440
00:16:37,333 --> 00:16:38,300
完成

441
00:16:38,300 --> 00:16:43,266
在特定索引處完成客戶的請求

442
00:16:43,266 --> 00:16:45,833
而這個索引可以是【數組】的索引

443
00:16:45,833 --> 00:16:46,933
數組在這裡

444
00:16:46,933 --> 00:16:51,166
所以我們可以列舉我們的範例

445
00:16:51,166 --> 00:16:53,733
然後我們得到索引和代碼

446
00:16:53,733 --> 00:16:57,333
來執行測試

447
00:16:57,333 --> 00:16:59,666
通過了，但這很難閱讀，讓我們

448
00:16:59,666 --> 00:17:00,866
把這個放入一個常數中

449
00:17:00,866 --> 00:17:05,333
並稱之為樣本

450
00:17:05,333 --> 00:17:10,300
再次執行測試，太好了

451
00:17:10,300 --> 00:17:13,333
增加更多的測試聲明

452
00:17:13,333 --> 00:17:18,066
針對不同的HTTP狀態代碼

453
00:17:18,066 --> 00:17:20,066
好的，還有其他我們可以重構的

454
00:17:20,066 --> 00:17:21,566
在這裡產品代碼中

455
00:17:21,566 --> 00:17:24,633
是的，我對這個API非常不滿意

456
00:17:24,633 --> 00:17:26,400
有可選的錯誤

457
00:17:26,400 --> 00:17:30,066
對，對，對，對我來說，問題在於