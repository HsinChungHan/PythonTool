63
00:02:07,266 --> 00:02:09,566
如您所見，我們現在有一個新的文件夾

64
00:02:09,566 --> 00:02:11,666
用於集成測試

65
00:02:11,666 --> 00:02:13,900
裏面有一個XCTestCase子類，我們

66
00:02:13,900 --> 00:02:16,400
可以開始添加我們的集成測試

67
00:02:16,400 --> 00:02:18,400
我們的想法是將所有的緩存

68
00:02:18,400 --> 00:02:19,666
模型對象整合

69
00:02:19,666 --> 00:02:22,133
並看看他們的協同行為

70
00:02:22,133 --> 00:02:22,700
或者

71
00:02:22,700 --> 00:02:25,566
具體來說，我們以前一直在

72
00:02:25,566 --> 00:02:27,033
進行隔離測試

73
00:02:27,033 --> 00:02:29,266
通過使用假雙，但現在是時候

74
00:02:29,266 --> 00:02:30,633
看看它們的行為

75
00:02:30,633 --> 00:02:33,500
在與實際實例協同作業時

76
00:02:33,500 --> 00:02:34,866
的生產類型

77
00:02:34,866 --> 00:02:37,666
好極了，還有EssentialFeedAPI的

78
00:02:37,666 --> 00:02:38,700
EndToEndTests

79
00:02:38,700 --> 00:02:41,500
我們在上一講中創建的是

80
00:02:41,500 --> 00:02:42,000
也是

81
00:02:42,000 --> 00:02:43,900
一個集成測試目標，因為它

82
00:02:43,900 --> 00:02:46,533
與多個模塊進行通信

83
00:02:46,533 --> 00:02:49,666
甚至與Feed API後端

84
00:02:49,666 --> 00:02:52,866
外部服務，我們可以添加這

85
00:02:52,866 --> 00:02:54,300
緩存集成測試

86
00:02:54,300 --> 00:02:57,566
在API端對端測試中，或者甚至

87
00:02:57,566 --> 00:02:58,533
將它們合併

88
00:02:58,533 --> 00:03:01,566
在一個新的集成測試目標，我們

89
00:03:01,566 --> 00:03:02,466
可以這樣做