90
00:03:02,466 --> 00:03:05,266
然而我們更喜歡將API和

91
00:03:05,266 --> 00:03:07,033
Cache模塊的集成測試

92
00:03:07,033 --> 00:03:09,333
單獨保留，因為他們旨在解決

93
00:03:09,333 --> 00:03:10,633
不同的問題

94
00:03:10,633 --> 00:03:13,433
並集成不同的組件和

95
00:03:13,433 --> 00:03:14,533
服務

96
00:03:14,533 --> 00:03:18,133
確實，所以讓我們運行測試，確保

97
00:03:18,133 --> 00:03:19,433
一切都好

98
00:03:19,433 --> 00:03:21,733
然後讓我們提交，好的，它建立

99
00:03:21,733 --> 00:03:23,566
成功，測試通過，即使

100
00:03:23,566 --> 00:03:24,700
我們的

101
00:03:24,700 --> 00:03:27,033
沒有進行測試，但這意味著我們有一個乾淨的

102
00:03:27,033 --> 00:03:27,900
目標

103
00:03:27,900 --> 00:03:31,733
我們可以開始工作準確地

104
00:03:31,733 --> 00:03:34,000
添加EssentialFeedCacheIntegration

105
00:03:34,000 --> 00:03:34,766
測試

106
00:03:34,766 --> 00:03:36,933
目標以分隔可能的

107
00:03:36,933 --> 00:03:39,266
效率較慢的緩存集成測試

108
00:03:39,266 --> 00:03:42,533
與快速單元或隔離測試

109
00:03:42,533 --> 00:03:45,433
是的，就是這樣，好的，讓我們從最

110
00:03:45,433 --> 00:03:46,633
簡單的任務開始

111
00:03:46,633 --> 00:03:48,933
我們可以想到的，對我來說，只是試圖

112
00:03:48,933 --> 00:03:51,100
從一個空的緩存中加載

113
00:03:51,100 --> 00:03:53,833
聽起來不錯，所以我們需要創建我們的

114
00:03:53,833 --> 00:03:55,833
LocalFeedLoader，這是系統

115
00:03:55,833 --> 00:03:57,266
正在測試的下層系統。