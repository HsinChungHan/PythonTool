140
00:04:50,300 --> 00:04:53,600
人工製品，狀態，確實

141
00:04:53,600 --> 00:04:55,500
我們會從高

142
00:04:55,500 --> 00:04:56,933
層次的抽象化

143
00:04:56,933 --> 00:04:59,833
一直到最具體的基礎設施

144
00:04:59,833 --> 00:05:00,700
細節

145
00:05:00,700 --> 00:05:02,800
並驗證整條鏈路都能正常運作

146
00:05:02,800 --> 00:05:04,800
一起做出來真的太棒了

147
00:05:04,800 --> 00:05:06,700
但我們在建構過程中出現了一些錯誤，這條

148
00:05:06,700 --> 00:05:08,700
追蹤記憶體洩漏的

149
00:05:08,700 --> 00:05:11,333
目標在此不可見，因為

150
00:05:11,333 --> 00:05:13,900
它處在一個獨立的目標中

151
00:05:13,900 --> 00:05:16,133
我們可以把這個檔案加入到整合

152
00:05:16,133 --> 00:05:17,433
測試的目標中

153
00:05:17,433 --> 00:05:19,600
就像我們對API端到端

154
00:05:19,600 --> 00:05:22,300
測試一樣

155
00:05:22,300 --> 00:05:26,066
這樣應該就可以了，讓我們來執行測試

156
00:05:26,066 --> 00:05:27,733
通過了，但我想看到一個

157
00:05:27,733 --> 00:05:29,100
失敗的測試

158
00:05:29,100 --> 00:05:30,700
所以我們可以改變CoreDataFeedStore的

159
00:05:30,700 --> 00:05:32,533
實現方式

160
00:05:32,533 --> 00:05:35,333
例如讓它回傳一個錯誤

161
00:05:35,333 --> 00:05:37,166
只是為了製造出一個異常行為

162
00:05:37,166 --> 00:05:39,433
那應該會產生一個失敗的測試

163
00:05:39,433 --> 00:05:40,866
做出來了

164
00:05:40,866 --> 00:05:43,433
它成功地證明了我們的測試

165
00:05:43,433 --> 00:05:44,300
正在測試一些事情