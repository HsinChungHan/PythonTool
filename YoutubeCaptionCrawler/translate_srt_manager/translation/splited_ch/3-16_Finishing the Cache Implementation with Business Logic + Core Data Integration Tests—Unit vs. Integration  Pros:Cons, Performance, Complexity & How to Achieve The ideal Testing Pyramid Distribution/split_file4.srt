116
00:03:57,266 --> 00:04:00,066
並執行一個載入操作並期望

117
00:04:00,066 --> 00:04:01,333
收到成功

118
00:04:01,333 --> 00:04:04,766
結果是一個空的圖像陣列

119
00:04:04,766 --> 00:04:06,700
如果我們收到失敗，我們將會失敗

120
00:04:06,700 --> 00:04:09,333
測試將以一個好的錯誤訊息失敗

121
00:04:09,333 --> 00:04:11,900
對，當然現在我們需要導入

122
00:04:11,900 --> 00:04:12,866
EssentialFeed

123
00:04:12,866 --> 00:04:18,133
模組，並且我們需要makeSUT幫助工具

124
00:04:18,133 --> 00:04:19,733
好的，所以測試的系統是

125
00:04:19,733 --> 00:04:22,000
與LocalFeedLoader共同合作還有

126
00:04:22,000 --> 00:04:22,866
CoreData

127
00:04:22,866 --> 00:04:25,666
FeedStore，與緩存集成測試相比的大不同是

128
00:04:25,666 --> 00:04:27,100
和CoreData隔離測試的區別是

129
00:04:27,100 --> 00:04:30,000
現在我們使用的是

130
00:04:30,000 --> 00:04:31,033
真正的File系統URL來保存

131
00:04:31,033 --> 00:04:34,633
我們的CoreData模組，這即是說

132
00:04:34,633 --> 00:04:38,000
我們使用的不是在CoreDataFeedStore中使用的手段，也即我們

133
00:04:38,000 --> 00:04:40,300
在內存中操作的/dev/null

134
00:04:40,300 --> 00:04:42,300
這會是在記憶體中運作的這

135
00:04:42,300 --> 00:04:43,666
是的，因為在這種情況下，我們希望打擊

136
00:04:43,666 --> 00:04:45,733
磁碟

137
00:04:45,733 --> 00:04:46,800
我們希望證實我們實際上

138
00:04:46,800 --> 00:04:49,500
創建的就是我們需要的

139
00:04:49,500 --> 00:04:50,300
正在創建