217
00:07:53,900 --> 00:07:55,833
我們甚至可以將這個映射邏輯

218
00:07:55,833 --> 00:07:57,500
移至計算變數，就像我們處理

219
00:07:57,500 --> 00:07:59,900
項目的方式，所以我們可以有某種

220
00:07:59,900 --> 00:08:04,233
feed，它是一個FeedItems的陣列，並且

221
00:08:04,233 --> 00:08:06,066
我們可以只將此映射邏輯放在這裡

222
00:08:06,066 --> 00:08:09,500
因此回傳 items.map

223
00:08:09,500 --> 00:08:13,100
因此這裡只是 root.feed

224
00:08:13,100 --> 00:08:16,400
美麗的，非常好

225
00:08:16,400 --> 00:08:19,433
其他的我看不出來了

226
00:08:19,433 --> 00:08:22,466
所以讓我們把所有的

227
00:08:22,466 --> 00:08:26,700
映射邏輯都移至 FeedItems

228
00:08:26,700 --> 00:08:30,466
<apper 這就是了，這樣看起來舒服多了

229
00:08:30,466 --> 00:08:33,733
你看這樣，整潔多了

230
00:08:33,733 --> 00:08:36,133
我喜歡那裡的靜態函數，我們

231
00:08:36,133 --> 00:08:37,433
不用在區塊中捕獲自身

232
00:08:37,433 --> 00:08:39,566
在區塊裡，另一種方式我們

233
00:08:39,566 --> 00:08:42,133
可以是使用一個 weak

234
00:08:42,133 --> 00:08:46,366
在這裡的 self 和使用 guard let

235
00:08:46,366 --> 00:08:48,700
如果我們有助手方法的話例如

236
00:08:48,700 --> 00:08:50,133
然後在這裡我們可以使用 self

237
00:08:50,133 --> 00:08:52,233
並且不保持對其強引用
