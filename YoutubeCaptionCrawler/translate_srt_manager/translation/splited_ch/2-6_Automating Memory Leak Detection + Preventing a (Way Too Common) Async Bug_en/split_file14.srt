336
00:12:12,366 --> 00:12:14,700
在事後它變得如此難以調試

337
00:12:14,700 --> 00:12:15,600
這個

338
00:12:15,600 --> 00:12:18,533
是的，因為我認為我們被條件化

339
00:12:18,533 --> 00:12:20,066
去思考我們正在

340
00:12:20,066 --> 00:12:20,633
建立的類別

341
00:12:20,633 --> 00:12:22,133
而我們沒有去想到

342
00:12:22,133 --> 00:12:24,700
協作者可能會如何行為

343
00:12:24,700 --> 00:12:28,133
所以確實容易忽略這點

344
00:12:28,133 --> 00:12:30,800
而現在我們留下了蹤跡，我們進行了測試

345
00:12:30,800 --> 00:12:31,266
那個

346
00:12:31,266 --> 00:12:33,033
就是某種形式的文件，告知

347
00:12:33,033 --> 00:12:34,933
下一個可能會考慮

348
00:12:34,933 --> 00:12:36,866
移除那行代碼的開發者要記得

349
00:12:36,866 --> 00:12:37,333
它

350
00:12:37,333 --> 00:12:39,200
是有理由存在的，是的，我的

351
00:12:39,200 --> 00:12:40,466
最愛就是這部分

352
00:12:40,466 --> 00:12:41,600
如你所說，這就是

353
00:12:41,600 --> 00:12:43,900
自我文件化，就在那裡說明

354
00:12:43,900 --> 00:12:46,066
我們正在檢查，我們正在考慮

355
00:12:46,066 --> 00:12:48,300
這種行為，我真的很喜歡這點

356
00:12:48,300 --> 00:12:51,033
確實，如果我們希望它在實例被釋放後完成，我們

357
00:12:51,033 --> 00:12:52,866
可以添加

358
00:12:52,866 --> 00:12:53,500
反向測試，通過檢查即使

359
00:12:53,500 --> 00:12:56,000
實例已被釋放，