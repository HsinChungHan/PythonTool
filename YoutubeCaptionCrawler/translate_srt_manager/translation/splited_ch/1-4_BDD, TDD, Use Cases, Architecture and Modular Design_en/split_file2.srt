55
00:01:42,366 --> 00:01:45,600
你知道從各個方面，但設計的目的

56
00:01:45,600 --> 00:01:46,300
是設計

57
00:01:46,300 --> 00:01:49,333
不僅僅是解決當前的問題

58
00:01:49,333 --> 00:01:52,866
因為軟體是靈活的，它一直在

59
00:01:52,866 --> 00:01:55,266
變化，所以你需要有一個

60
00:01:55,266 --> 00:01:58,866
平衡，既要歡迎未來的變化，

61
00:01:58,866 --> 00:02:00,633
又要解決當前的問題，你

62
00:02:00,633 --> 00:02:02,700
不想過度抽象化

63
00:02:02,700 --> 00:02:04,866
來解決可能
64
00:02:04,866 --> 00:02:05,833
永遠不會發生的未來問題。

65
00:02:05,833 --> 00:02:06,933
但你也不希望讓你的

66
00:02:06,933 --> 00:02:09,333
架構夠堅硬，如果你

67
00:02:09,333 --> 00:02:10,633
需要改變事情，

68
00:02:10,633 --> 00:02:13,733
它太難。事實上，這是一個

69
00:02:13,733 --> 00:02:14,800
非常，非常

70
00:02:14,800 --> 00:02:17,100
難以解決的問題。基本上，你

71
00:02:17,100 --> 00:02:19,100
需要促進

72
00:02:19,100 --> 00:02:21,433
未來的需求，同時你不

73
00:02:21,433 --> 00:02:23,666
知道這些需求將是什麼。

74
00:02:23,666 --> 00:02:27,100
那你該怎麼辦？你建立

75
00:02:27,100 --> 00:02:29,666
良好的流程。這就是你從

76
00:02:29,666 --> 00:02:30,800
需求開始，

77
00:02:30,800 --> 00:02:33,666
到計劃，到設計，到構建

78
00:02:33,666 --> 00:02:34,466
到編碼。