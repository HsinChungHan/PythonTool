1109
01:16:06,700 --> 01:16:08,860
同時保留一層的兼容性

1110
01:16:08,860 --> 01:16:13,100
與Objective-C代碼。

1111
01:16:13,100 --> 01:16:18,100
這個想法是將交點減少到平均值。

1112
01:16:19,780 --> 01:16:22,380
嘗試編寫像模塊之類的子系統，

1113
01:16:22,380 --> 01:16:25,580
使用相同語言編寫的功能或組件

1114
01:16:25,580 --> 01:16:27,100
而不是來回切換

1115
01:16:27,100 --> 01:16:28,900
在Swift和Objective-C之間。

1116
01:16:32,780 --> 01:16:36,500
如果這種系統，子系統是用Swift撰寫的

1117
01:16:36,500 --> 01:16:39,580
並且需要從Objective-C存取，

1118
01:16:39,580 --> 01:16:41,820
只有子系統界面

1119
01:16:41,820 --> 01:16:45,380
需要可以從Objective-C存取。

1120
01:16:45,380 --> 01:16:48,060
所以為此，我們可以在Swift中編寫一個包裝器

1121
01:16:48,060 --> 01:16:51,580
遵循我們談到的Objective-C的限制，

1122
01:16:51,580 --> 01:16:55,180
而在子系統中的所有其他文件

1123
01:16:55,180 --> 01:16:58,060
可以繼續使用Swift的功能。

1124
01:17:00,940 --> 01:17:04,580
此外，編寫這些包裝器只是暫時的。

1125
01:17:04,580 --> 01:17:06,780
一旦你重寫了使用該子系統的所有客戶端

1126
01:17:06,780 --> 01:17:09,260
你可以將其移除。

1127
01:17:09,260 --> 01:17:10,660
在Swift中。