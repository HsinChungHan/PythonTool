767
00:27:52,633 --> 00:27:57,266
相應地並返回錯誤

768
00:27:57,266 --> 00:27:59,433
好極了，它通過了，這意味著我們得到了

769
00:27:59,433 --> 00:28:00,933
一個錯誤，使用

770
00:28:00,933 --> 00:28:03,666
stubbed error與URLProtocolStub

771
00:28:03,666 --> 00:28:05,333
所以現在我們的測試現在使用子類

772
00:28:05,333 --> 00:28:07,733
來模擬任何類型的URLSession

773
00:28:07,733 --> 00:28:09,666
這使我們的生產代碼有可能

774
00:28:09,666 --> 00:28:12,000
在未來被重構，以使用

775
00:28:12,000 --> 00:28:13,733
AFNetworking或者繼續使用新的APIs

776
00:28:13,733 --> 00:28:16,633
從URLSession

777
00:28:16,633 --> 00:28:18,066
或者甚至使用任何種類的機制

778
00:28:18,066 --> 00:28:20,466
用於加載經過URL的方法

779
00:28:20,466 --> 00:28:22,700
網址加載系統

780
00:28:22,700 --> 00:28:23,733
所以我對此感到滿意，太棒了，讓我們

781
00:28:23,733 --> 00:28:26,533
提交

782
00:28:26,533 --> 00:28:28,366
重構URLSession模擬

783
00:28:28,366 --> 00:28:32,233
使用URLProtocol的策略

784
00:28:32,233 --> 00:28:36,000
stubs以刪除測試耦合

785
00:28:36,000 --> 00:28:39,833
和URLSession

786
00:28:39,833 --> 00:28:43,033
類型，對，就是這樣

787
00:28:43,033 --> 00:28:47,033
所以我們有一個失敗的

788
00:28:47,033 --> 00:28:49,900
請求場景

789
00:28:49,900 --> 00:28:50,866
帶有錯誤是一個有效的路徑，這意味著

790
00:28:50,866 --> 00:28:53,333
我們嘗試執行一個請求

791
00:28:53,333 --> 00:28:55,033
但是出了點錯，但在一個

792
00:28:55,033 --> 00:28:56,633
但事情出問題了。