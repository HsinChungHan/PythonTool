576
00:21:10,866 --> 00:21:13,666
處理中的任何URL請求

577
00:21:13,666 --> 00:21:14,466
應用程式

578
00:21:14,466 --> 00:21:16,533
我們只需實現一些

579
00:21:16,533 --> 00:21:17,666
抽象方法

580
00:21:17,666 --> 00:21:19,833
的URLProtocol類別，即使

581
00:21:19,833 --> 00:21:21,433
它被稱為URLProtocol

582
00:21:21,433 --> 00:21:24,233
這是一個類別，所以關鍵是

583
00:21:24,233 --> 00:21:25,100
在我們的情況下

584
00:21:25,100 --> 00:21:27,833
我們實際上可以創建一個URL的子類

585
00:21:27,833 --> 00:21:28,533
Protocol

586
00:21:28,533 --> 00:21:31,333
實現我們的stub行為, 以便我們可以

587
00:21:31,333 --> 00:21:33,500
在測試期間攔截你的請求

588
00:21:33,500 --> 00:21:35,433
並以stub請求完成，所以我們

589
00:21:35,433 --> 00:21:37,333
實際上從來沒有去雲端

590
00:21:37,333 --> 00:21:39,833
準確的說，這樣會使它更快並且

591
00:21:39,833 --> 00:21:40,533
可靠

592
00:21:40,533 --> 00:21:42,300
我們消除了網路連接的不穩定性，並且我們可以隱藏那些

593
00:21:42,300 --> 00:21:44,000
詳情

594
00:21:44,000 --> 00:21:44,700
從我們的產品代碼以及

595
00:21:44,700 --> 00:21:47,733
測試代碼將永遠不知道我們是否正在

596
00:21:47,733 --> 00:21:49,433
使用URLSession

597
00:21:49,433 --> 00:21:50,766
或者其他的抓取URLs的機制

598
00:21:50,766 --> 00:21:54,466
準確的說，我們可能正在使用框架AF

599
00:21:54,466 --> 00:21:57,100
Networking

600
00:21:57,100 --> 00:21:58,066
或者URLSessions或者甚至是傳統的
