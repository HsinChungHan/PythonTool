453
00:16:45,100 --> 00:16:47,500
我們只定義了一種方法，因此我們

454
00:16:47,500 --> 00:16:48,800
消除了問題

455
00:16:48,800 --> 00:16:50,533
有一堆我們需要關心的，並且

456
00:16:50,533 --> 00:16:52,066
需要覆蓋的方法

457
00:16:52,066 --> 00:16:52,866
超載

458
00:16:52,866 --> 00:16:54,533
所以我們可以保證生產代碼

459
00:16:54,533 --> 00:16:56,933
只能看到這個方法

460
00:16:56,933 --> 00:16:58,866
所以我們只需要模擬這個方法，並且

461
00:16:58,866 --> 00:17:00,133
我們不需要關心其他的

462
00:17:00,133 --> 00:17:00,866
方法

463
00:17:00,866 --> 00:17:04,700
是的，所以如果我們現在把URLSession

464
00:17:04,700 --> 00:17:07,733
換成HTTPSession

465
00:17:07,733 --> 00:17:10,933
這應該是一個容易的轉變

466
00:17:10,933 --> 00:17:13,833
於是這將會是一個遵從HTTPSession的

467
00:17:13,833 --> 00:17:15,900
HTTPSessionSpy

468
00:17:15,900 --> 00:17:17,433
所以它不需要再覆蓋

469
00:17:17,433 --> 00:17:20,933
它只需要來自協議的實現

470
00:17:20,933 --> 00:17:24,066
好的，但我們這裡仍然有一個問題

471
00:17:24,066 --> 00:17:26,400
我們仍在使用URLSessionData

472
00:17:26,400 --> 00:17:27,166
任務

473
00:17:27,166 --> 00:17:30,400
對，它有一堆方法，所以

474
00:17:30,400 --> 00:17:34,066
我們可以用同樣的方法創建我們自己的

475
00:17:34,066 --> 00:17:37,200
只有一個方法的HTTPSessionTask
