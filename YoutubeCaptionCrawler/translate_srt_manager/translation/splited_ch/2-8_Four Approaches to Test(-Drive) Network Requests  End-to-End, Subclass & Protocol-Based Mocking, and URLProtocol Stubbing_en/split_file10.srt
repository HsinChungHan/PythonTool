250
00:09:04,866 --> 00:09:07,033
好的，我們這裡出現了崩潰，這很好

251
00:09:07,033 --> 00:09:08,366
因為我們回傳了

252
00:09:08,366 --> 00:09:11,033
在第一次測試時一個假的 URLSession

253
00:09:11,033 --> 00:09:11,900
那個並沒有

254
00:09:11,900 --> 00:09:15,600
覆寫 resume，所以我們可以直接覆寫

255
00:09:15,600 --> 00:09:19,033
並什麼也不做，我們再次運行

256
00:09:19,033 --> 00:09:23,333
然後它現在通過了，完美

257
00:09:23,333 --> 00:09:25,266
也就是說如果我們刪掉 resume，我

258
00:09:25,266 --> 00:09:27,333
又會得到一個失敗的測試

259
00:09:27,333 --> 00:09:29,500
看看這，你看，但是這其中

260
00:09:29,500 --> 00:09:31,033
對這些測試的問題是

261
00:09:31,033 --> 00:09:32,933
當我們使用模擬，尤其是

262
00:09:32,933 --> 00:09:34,466
我們不擁有的類別時

263
00:09:34,466 --> 00:09:37,100
看看我們的測試怎麼綁定到

264
00:09:37,100 --> 00:09:38,066
實現上

265
00:09:38,066 --> 00:09:39,666
這裡的這個實現應該是

266
00:09:39,666 --> 00:09:42,300
私有的，我們應該只測試行為

267
00:09:42,300 --> 00:09:44,366
但是因為模擬策略的關係

268
00:09:44,366 --> 00:09:45,500
我們選擇的

269
00:09:45,500 --> 00:09:47,733
我們最後不得不測試每一個

270
00:09:47,733 --> 00:09:48,533
交互

271
00:09:48,533 --> 00:09:50,800
確定哪個 API 正在被調用以及

272
00:09:50,800 --> 00:09:52,700
確定哪些參數在什麼時間被調用

273
00:09:52,700 --> 00:09:54,633
這可能是我們需要的，但那

274
00:09:54,633 --> 00:09:56,466
可能會使測試成對
