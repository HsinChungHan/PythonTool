771
00:31:32,766 --> 00:31:35,266
各種項目的陣列，我們需要一種方式來

772
00:31:35,266 --> 00:31:35,833
映射

773
00:31:35,833 --> 00:31:38,366
我們的 Item 成為 FeedItem，我們可以使用

774
00:31:38,366 --> 00:31:39,200
一個

775
00:31:39,200 --> 00:31:41,833
計算過的 var 來達成，所以在這裡我們

776
00:31:41,833 --> 00:31:42,766
可以返回我們的

777
00:31:42,766 --> 00:31:46,466
具有相同 id、描述、位置和 imageURL 的 FeedItem，

778
00:31:46,466 --> 00:31:49,900
對吧，

779
00:31:49,900 --> 00:31:52,866
我們需要在這裡做的一切就是映射我們的

780
00:31:52,866 --> 00:31:53,833
項目，

781
00:31:53,833 --> 00:31:57,100
變成 FeedItems，對吧。

782
00:31:57,100 --> 00:32:00,466
就這樣，讓我們來運行測試，砰，

783
00:32:00,466 --> 00:32:04,066
依然能運行，太棒了，看看，我們

784
00:32:04,066 --> 00:32:04,700
有我們自己的

785
00:32:04,700 --> 00:32:06,866
項目，代表 API 的 Feed Item，

786
00:32:06,866 --> 00:32:09,833
在這個情境中，

787
00:32:09,833 --> 00:32:12,700
所以 FeedItem 對 API 毫無認識，

788
00:32:12,700 --> 00:32:13,333
再度強調，

789
00:32:13,333 --> 00:32:15,900
即使是 keypaths，因為你可以說

790
00:32:15,900 --> 00:32:17,100
它就是一串字符串，

791
00:32:17,100 --> 00:32:18,866
但不，這是一個細節實現，

792
00:32:18,866 --> 00:32:21,266
它滲漏到了更抽象的，

793
00:32:21,266 --> 00:32:24,300
更高層次的模塊，是的，這個 FeedItem

794
00:32:24,300 --> 00:32:27,033
有一個 imageURL 屬性，就像我們

795
00:32:27,033 --> 00:32:27,333
看到的。