796
00:32:27,333 --> 00:32:30,633
如果之前我們要實現 Decodable，

797
00:32:30,633 --> 00:32:33,266
我們就得有這些 CodingKeys，

798
00:32:33,266 --> 00:32:34,233
我們必須

799
00:32:34,233 --> 00:32:36,366
對編譯器給出映射指示，

800
00:32:36,366 --> 00:32:38,700
把圖片的

801
00:32:38,700 --> 00:32:42,133
JSON 屬性映射到 imageURL，但是現在

802
00:32:42,133 --> 00:32:45,333
有了 Item 結構，API 中的 FeedItem

803
00:32:45,333 --> 00:32:46,700
的內部表示

804
00:32:46,700 --> 00:32:49,433
我們不需要那麼做

805
00:32:49,433 --> 00:32:51,033
我們不需要那樣

806
00:32:51,033 --> 00:32:52,366
如你所見，我們沒有打破

807
00:32:52,366 --> 00:32:54,233
測試，對吧？這是一個簡單的

808
00:32:54,233 --> 00:32:57,100
變動，並且我們保持了我們的模塊

809
00:32:57,100 --> 00:32:58,133
抽象，

810
00:32:58,133 --> 00:33:00,766
確切的說，這顯示了測試是如何

811
00:33:00,766 --> 00:33:01,733
他們並不包含

812
00:33:01,733 --> 00:33:04,700
任何內部實施細節，而且

813
00:33:04,700 --> 00:33:06,466
基本上就是輸入輸出

814
00:33:06,466 --> 00:33:08,633
他們只檢查行為，我真的非常喜歡

815
00:33:08,633 --> 00:33:11,333
這個，讓我們提交

816
00:33:11,333 --> 00:33:15,666
將 Decodable 邏輯移動到新的 private 

817
00:33:15,666 --> 00:33:16,366
Item 

818
00:33:16,366 --> 00:33:20,066
結構類型，以此解結 Feed 

819
00:33:20,066 --> 00:33:23,333
模塊與 API 

820
00:33:23,333 --> 00:33:26,866
實施細節的耦合，看看這個，

821
00:33:26,866 --> 00:33:30,066
這真的太棒了。