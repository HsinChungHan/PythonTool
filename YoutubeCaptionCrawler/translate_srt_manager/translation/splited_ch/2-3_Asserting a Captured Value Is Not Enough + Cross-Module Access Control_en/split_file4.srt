96
00:03:10,933 --> 00:03:13,433
所以 test init 並不會向

97
00:03:13,433 --> 00:03:14,700
URL 

98
00:03:14,700 --> 00:03:17,566
請求資料，所以第二個測試是對 load 

99
00:03:17,566 --> 00:03:18,866
方法和我們期望的行為

100
00:03:18,866 --> 00:03:22,400
從 URL 請求資料，哦，讓我修正

101
00:03:22,400 --> 00:03:22,800
這個

102
00:03:22,800 --> 00:03:27,033
從 URL 請求資料，非常好

103
00:03:27,033 --> 00:03:31,500
所以提高測試名稱，讓我們提交這個

104
00:03:31,500 --> 00:03:34,000
好的，我們現在可以繼續，有一件事

105
00:03:34,000 --> 00:03:35,033
困擾著我

106
00:03:35,033 --> 00:03:36,633
當我在測試兩個對象

107
00:03:36,633 --> 00:03:38,300
像我們使用的一樣協同作業

108
00:03:38,300 --> 00:03:39,333
RemoteFeedLoader

109
00:03:39,333 --> 00:03:41,833
和 HTTPClient，我們並不需要只

110
00:03:41,833 --> 00:03:43,666
測試出現的信息

111
00:03:43,666 --> 00:03:44,300
而是需要測試

112
00:03:44,300 --> 00:03:46,133
信息被調用的次數，

113
00:03:46,133 --> 00:03:48,133
比方說，

114
00:03:48,133 --> 00:03:50,400
如果我無意間調用了這個方法

115
00:03:50,400 --> 00:03:51,200
兩次，

116
00:03:51,200 --> 00:03:53,500
測試將不會失敗，這就是問題所在，

117
00:03:53,500 --> 00:03:54,933
因為這將是

118
00:03:54,933 --> 00:03:56,533
我們意想不到的行為

119
00:03:56,533 --> 00:03:59,733
對的，所以雖然我們在我們的測試中呼叫 load

120
00:03:59,733 --> 00:04:02,700
一次，但在這種情況下，客戶端

121
00:04:02,700 --> 00:04:04,000
被調用了兩次
