122
00:04:04,000 --> 00:04:07,266
正是因為我們的間諜在捕獲

123
00:04:07,266 --> 00:04:10,133
被傳遞的值，所以我可以調用

124
00:04:10,133 --> 00:04:11,500
這個方法10次

125
00:04:11,500 --> 00:04:14,066
並且它總是會捕獲最後

126
00:04:14,066 --> 00:04:15,733
傳遞給它的值

127
00:04:15,733 --> 00:04:17,900
所以雖然我們正在斷言我們

128
00:04:17,900 --> 00:04:19,433
傳遞了正確的值，但我們並未

129
00:04:19,433 --> 00:04:21,033
斷言調用的次數

130
00:04:21,033 --> 00:04:22,700
方法被調用了多少次，以及在這個

131
00:04:22,700 --> 00:04:24,800
語境中調用了多少次

132
00:04:24,800 --> 00:04:26,366
這是很重要的，因為我不想

133
00:04:26,366 --> 00:04:28,533
發送大量的API請求

134
00:04:28,533 --> 00:04:30,466
所以我們需要某種機制來

135
00:04:30,466 --> 00:04:32,366
計數被調用的次數

136
00:04:32,366 --> 00:04:35,033
客戶端行為被調用的次數

137
00:04:35,033 --> 00:04:35,900
就是這樣

138
00:04:35,900 --> 00:04:38,300
所以我想從添加一個新的

139
00:04:38,300 --> 00:04:39,833
測試開始

140
00:04:39,833 --> 00:04:42,300
如果我兩次調用加載，我希望加載

141
00:04:42,300 --> 00:04:42,866
請求

142
00:04:42,866 --> 00:04:45,266
兩次，但如果我只調用一次，我希望

143
00:04:45,266 --> 00:04:46,066
只加載

144
00:04:46,066 --> 00:04:49,100
一次，對吧，那麼讓我們添加一個兩次加載，並
