369
00:12:14,300 --> 00:12:16,933
但你很快地失去了所

370
00:12:16,933 --> 00:12:18,533
希望在一開始就能控制的

371
00:12:18,533 --> 00:12:19,333
控制權

372
00:12:19,333 --> 00:12:22,000
是的，我認為在這個範例中

373
00:12:22,000 --> 00:12:23,433
問題在於沒有適當的

374
00:12:23,433 --> 00:12:24,466
通訊方式

375
00:12:24,466 --> 00:12:27,100
在這些模塊之間，並沒有

376
00:12:27,100 --> 00:12:29,200
預定義的通訊頻道也許

377
00:12:29,200 --> 00:12:30,000
他們將會是

378
00:12:30,000 --> 00:12:32,366
雙向或單向的

379
00:12:32,366 --> 00:12:34,133
在Model和

380
00:12:34,133 --> 00:12:36,300
UI或者是UI和Model之間的溝通

381
00:12:36,300 --> 00:12:38,933
API和Model，Database和

382
00:12:38,933 --> 00:12:39,666
Model

383
00:12:39,666 --> 00:12:42,000
所以我們將看到元件被

384
00:12:42,000 --> 00:12:44,300
引用在各種地方，UI在

385
00:12:44,300 --> 00:12:46,633
Database或者是Database在

386
00:12:46,633 --> 00:12:47,733
UI

387
00:12:47,733 --> 00:12:51,200
這可能會創造出緊密耦合以及



388
00:12:51,200 --> 00:12:54,533
混淆和僵化隨著進行

389
00:12:54,533 --> 00:12:57,433
所謂的spaghetti architecture是的並且

390
00:12:57,433 --> 00:12:58,233
公平地說

391
00:12:58,233 --> 00:12:59,833
你仍然可以有一個具體的

392
00:12:59,833 --> 00:13:02,133
架構在沒有spaghetti

393
00:13:02,133 --> 00:13:05,266
如果你保持層次分離的話
