291
00:09:45,200 --> 00:09:48,133
用這些邊界提取你的程式碼

292
00:09:48,133 --> 00:09:49,100
並且

293
00:09:49,100 --> 00:09:51,433
有好的源碼依賴關係但你

294
00:09:51,433 --> 00:09:53,666
也增加了一些維護

295
00:09:53,666 --> 00:09:55,500
獨立框架的負擔絕對的

296
00:09:55,500 --> 00:09:56,700
絕對的那是

297
00:09:56,700 --> 00:09:59,266
那嘛那嘛其中一個取捨所以

298
00:09:59,266 --> 00:10:00,366
那就是說

299
00:10:00,366 --> 00:10:02,633
組成類型的一種方法在獨立的

300
00:10:02,633 --> 00:10:04,633
模組中你可以有所有的類型在

301
00:10:04,633 --> 00:10:05,666
一個模組之中

302
00:10:05,666 --> 00:10:07,500
但只要它們分開你的

303
00:10:07,500 --> 00:10:09,033
monolith仍然

304
00:10:09,033 --> 00:10:11,666
能夠被需要的時候將測試和分解

305
00:10:11,666 --> 00:10:12,300
你可以

306
00:10:12,300 --> 00:10:14,366
將這些類型移至獨立模組以便

307
00:10:14,366 --> 00:10:16,133
易用性與可測試性

308
00:10:16,133 --> 00:10:19,266
為了更快的測試或者是為了任何原因

309
00:10:19,266 --> 00:10:20,533
你需要移動它們

310
00:10:20,533 --> 00:10:23,666
但為什麼很少看到應用程序他們

311
00:10:23,666 --> 00:10:24,300
是

312
00:10:24,300 --> 00:10:28,066
可以組合或分解,在我看來

313
00:10:28,066 --> 00:10:29,266
我認為是因為

314
00:10:29,266 --> 00:10:32,366
這更難做需要一個深入的

315
00:10:32,366 --> 00:10:33,900
學習曲線在那裡

316
00:10:33,900 --> 00:10:36,866
我們經常看到開發者希望

317
00:10:36,866 --> 00:10:38,066
控制