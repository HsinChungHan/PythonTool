110
00:14:42,960 --> 00:14:51,200
讓我們看一個例子。所以異常類型是 XC Crash 和 SIGKILL

111
00:14:53,440 --> 00:14:59,600
我們也會看到來自看門狗的大量信息。例如看門狗事件，

112
00:14:59,600 --> 00:15:06,880
看門狗的可見性，CPU 資料統計，你也會看到我提到的這段代碼，所以 8 個壞食物

113
00:15:08,800 --> 00:15:12,080
這是看門狗崩潰的明確。

114
00:15:19,200 --> 00:15:24,960
看門狗將終止那些長時間阻塞主線程的應用程式，有許多

115
00:15:24,960 --> 00:15:32,000
方法可以長時間阻塞主線程，例如同步網路，處理

116
00:15:32,000 --> 00:15:40,000
大量的數據，如大的 JSON 文件或 3D 模型，觸發輕量級移植

117
00:15:40,000 --> 00:15:47,440
對大型 CoreDataStore 的同步等等。為了了解為何阻塞主線程

118
00:15:47,440 --> 00:15:53,760
是一個問題，考慮這個最常見的例子。從同步數據裡讀取數據進入 UI.