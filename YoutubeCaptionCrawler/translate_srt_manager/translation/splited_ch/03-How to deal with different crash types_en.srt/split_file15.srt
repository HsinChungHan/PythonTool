119
00:15:53,760 --> 00:16:01,120
網路調用。如果主線程忙於這個網路調用，系統無法處理UI事件

120
00:16:01,120 --> 00:16:08,800
如多個滾動事件，直到完成網路調用。所以如果這個網路

121
00:16:08,800 --> 00:16:17,040
調用花費了太長的時間，用戶滾動你的UI到應用程序

122
00:16:17,040 --> 00:16:23,360
實際上回應這些滾動事件的時間會很長。我知道你已經在實踐中看到了，你

123
00:16:23,360 --> 00:16:32,160
知道這使得應用程序感覺真的很無回應。所有的看門狗Crashes都包含有關

124
00:16:32,160 --> 00:16:38,560
導致看門狗關閉應用程序的慢速應用程序狀態過渡的細節。你可以使用

125
00:16:38,560 --> 00:16:47,680
Crash Thread回蹤來看看誰是罪魁禍首。在我們的案例中，我們看到這是AppDelegate

126
00:16:47,680 --> 00:16:54,000
application did finish launching，一旦我們有了這些資訊，我們就可以使用Instruments來進行