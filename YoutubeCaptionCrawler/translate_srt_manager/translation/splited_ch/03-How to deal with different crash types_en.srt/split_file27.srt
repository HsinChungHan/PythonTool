212
00:27:56,480 --> 00:28:04,240
但也不一定。例如當行程導致短時間內硬碟寫入量明顯過多時，

213
00:28:04,240 --> 00:28:11,920
或者當該行程中的執行緒太頻繁地喚醒，這就會大量消耗電量。

214
00:28:11,920 --> 00:28:19,920
像是執行緒與執行緒之間的通信API，如"perform on Thread"或

215
00:28:19,920 --> 00:28:26,880
"async execute"或"dispatch async"，在不經意間被調用的次數遠超過預料，就會引發這種情況。

216
00:28:28,320 --> 00:28:32,800
由於觸發此異常的通信發生得如此頻繁，

217
00:28:33,840 --> 00:28:38,720
通常會有多個背景執行緒，其相似的回溯指示出

218
00:28:38,720 --> 00:28:47,040
執行緒通信的起源。所以這裡的要點是，每當你的應用程式正使用

219
00:28:47,040 --> 00:28:53,440
大量的某種資源時，您可能會看到這種類型的崩潰。所以說，XC Resource是非常具體的。