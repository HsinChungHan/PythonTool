219
00:24:53,080 --> 00:24:59,000
這裡有一些我不完全確定為何的有趣現象。

220
00:24:59,000 --> 00:25:03,720
即使在EssentialFeed中沒有變化，我們仍舊讓系統重新編譯所有的

221
00:25:03,720 --> 00:25:09,520
Swift文件，但那可能只是編譯器的一瞥。

222
00:25:09,520 --> 00:25:20,680
這裡的關鍵是我們得到了一個更快的編譯並且更少的建構任務。

223
00:25:20,680 --> 00:25:25,840
現在我們看到這個，我們問自己，我們怎麼才能幫助編譯系統呢？

224
00:25:25,840 --> 00:25:31,880
嗯，要明白這點，我們需要從依賴關係的角度來思考編譯系統，

225
00:25:31,880 --> 00:25:34,240
而不是任務的順序。

226
00:25:34,240 --> 00:25:39,600
任務的順序是系統的工作。

227
00:25:39,600 --> 00:25:51,040
為了理解這點，我們需要了解依賴性從哪裡來。

228
00:25:51,040 --> 00:26:01,800
所以我正在使用項目編輯器並開啟建構規則分頁。