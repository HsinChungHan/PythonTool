44
00:04:15,160 --> 00:04:20,920
在這裡，您可以看到CPU指令，這是我們在hello word的例子中看到的一部分

45
00:04:20,920 --> 00:04:24,080
在上一張幻燈片上。

46
00:04:24,080 --> 00:04:31,780
當然這也相當困難理解和追蹤。

47
00:04:31,780 --> 00:04:36,960
為了能夠將代碼以人類可讀的編程語言寫出並將其轉化爲

48
00:04:36,960 --> 00:04:44,420
有效的機器碼，我們需要一個工具，最好是可以自動完成這些工作的工具。

49
00:04:44,420 --> 00:04:50,600
這個工具被稱為Compiler，它自動將高級源碼轉換為低級

50
00:04:50,600 --> 00:04:55,480
可執行的機器碼。

51
00:04:55,480 --> 00:05:00,680
所以開發人員可以專注於編寫源代碼。

52
00:05:00,680 --> 00:05:06,160
現存的compiler數量眾多，並且每天都在增長。

53
00:05:06,160 --> 00:05:11,840
有針對非常簡單的編程語言的compiler，到非常強大的compiler，如

54
00:05:11,840 --> 00:05:19,720
Swift compiler，其實其是由許多子組件組成的。

55
00:05:19,720 --> 00:05:23,440
compiler的領域是一個非常複雜的領域。