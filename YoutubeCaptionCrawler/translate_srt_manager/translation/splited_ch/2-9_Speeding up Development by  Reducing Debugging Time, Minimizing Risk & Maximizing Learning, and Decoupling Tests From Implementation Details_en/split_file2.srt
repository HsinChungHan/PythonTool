49
00:01:32,400 --> 00:01:33,900
我們正在告訴URL加載系統

50
00:01:33,900 --> 00:01:35,500
我們不會處理這個

51
00:01:35,500 --> 00:01:36,133
請求

52
00:01:36,133 --> 00:01:38,000
所以它會通過正常的URL

53
00:01:38,000 --> 00:01:40,233
處理生成一個真正的HTTP

54
00:01:40,233 --> 00:01:42,533
請求，所以我認為我們可以通過

55
00:01:42,533 --> 00:01:44,300
移除這個基於URL的

56
00:01:44,300 --> 00:01:46,233
仿製並截取所有的

57
00:01:46,233 --> 00:01:48,633
請求並添加一個單獨的測試

58
00:01:48,633 --> 00:01:49,833
來確保我們傳遞的是

59
00:01:49,833 --> 00:01:52,366
正確的URL，因此，如果URL測試

60
00:01:52,366 --> 00:01:54,466
失敗，我們就知道問題出在URL上，

61
00:01:54,466 --> 00:01:56,766
如果請求錯誤測試失敗，我們就知道

62
00:01:56,766 --> 00:01:57,733
這是由於

63
00:01:57,733 --> 00:02:00,000
URL請求的錯誤，因此我們需要區分

64
00:02:00,000 --> 00:02:01,100
這兩個問題

65
00:02:01,100 --> 00:02:03,733
這聽起來不錯，所以為了實現它，我們可以

66
00:02:03,733 --> 00:02:04,633
停止

67
00:02:04,633 --> 00:02:08,133
在我們的仿製中調查URL並且

68
00:02:08,133 --> 00:02:10,000
通過返回真值於canInit

69
00:02:10,000 --> 00:02:12,000
方法來截取所有請求

70
00:02:12,000 --> 00:02:14,000
因此我們不需要傳遞一個URL