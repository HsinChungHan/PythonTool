196
00:07:04,933 --> 00:07:06,233
問題是

197
00:07:06,233 --> 00:07:09,666
那很好，好，我們來清除

198
00:07:09,666 --> 00:07:10,466
這個

199
00:07:10,466 --> 00:07:13,566
我們來整理一點點這裡的程式碼

200
00:07:13,566 --> 00:07:16,466
再執行一次測試，它成功了，所以我們

201
00:07:16,466 --> 00:07:18,466
已將測試的關注點分開

202
00:07:18,466 --> 00:07:20,866
請求的URL和處理的

203
00:07:20,866 --> 00:07:22,066
請求錯誤

204
00:07:22,066 --> 00:07:25,100
我喜歡這個點子，同意，所以保證

205
00:07:25,100 --> 00:07:28,133
正確的URL和HTTP

206
00:07:28,133 --> 00:07:31,333
在取得請求的方法

207
00:07:31,333 --> 00:07:33,166
所以我們可以使用相同的機制來測試

208
00:07:33,166 --> 00:07:35,500
POST請求，並且也查看

209
00:07:35,500 --> 00:07:36,866
請求的主體

210
00:07:36,866 --> 00:07:38,300
我們也可以查看請求的

211
00:07:38,300 --> 00:07:40,466
參數，任何與請求

212
00:07:40,466 --> 00:07:41,100
相關的

213
00:07:41,100 --> 00:07:43,433
我們關心的資料可以被斷言

214
00:07:43,433 --> 00:07:44,700
透過這些觀察者

215
00:07:44,700 --> 00:07:47,566
並且不用打網路，完全是

216
00:07:47,566 --> 00:07:49,333
這讓它們變得可靠且快速

217
00:07:49,333 --> 00:07:51,733
對，繼續下去，我看到一堆

218
00:07:51,733 --> 00:07:54,300
重覆的代碼在這裡

219
00:07:54,300 --> 00:07:57,266
對，我覺得該是時間，開始和

220
00:07:57,266 --> 00:07:59,266
停止方法的呼叫可以被移動