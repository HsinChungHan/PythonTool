24
00:00:49,500 --> 00:00:50,066
出

25
00:00:50,066 --> 00:00:52,366
這個問題是 URL 對吧首先

26
00:00:52,366 --> 00:00:53,666
首先，我們得到的是

27
00:00:53,666 --> 00:00:56,233
一個網絡錯誤，這意味著我們實際上

28
00:00:56,233 --> 00:00:56,866
嘗試

29
00:00:56,866 --> 00:00:59,433
進行網絡請求，但它失敗了

30
00:00:59,433 --> 00:01:01,100
但是這個測試與

31
00:01:01,100 --> 00:01:02,700
URL 無關

32
00:01:02,700 --> 00:01:04,866
在設定中，我們用錯誤進行替換儲存，並預期得到這個錯誤

33
00:01:04,866 --> 00:01:06,700
我們預期會得到這個錯誤

34
00:01:06,700 --> 00:01:07,200
返回

35
00:01:07,200 --> 00:01:09,433
並且在這個斷定失敗中沒有任何東西

36
00:01:09,433 --> 00:01:11,733
告訴我們問題出在 URL 上

37
00:01:11,733 --> 00:01:14,133
我看，所以找出問題的唯一方法是進行

38
00:01:14,133 --> 00:01:15,433
代碼的調試

39
00:01:15,433 --> 00:01:17,266
我們的測試如果能夠更具體地指出問題在哪里

40
00:01:17,266 --> 00:01:19,200
就會變得更有價值，而不需要進行調試

41
00:01:19,200 --> 00:01:21,100
問題在哪裡，而不用調試

42
00:01:21,100 --> 00:01:21,600
它

43
00:01:21,600 --> 00:01:23,433
如果你必須調試才能找到測試

44
00:01:23,433 --> 00:01:25,500
失敗，那麼你就在減少測試的價值

45
00:01:25,500 --> 00:01:26,300
你的測試

46
00:01:26,300 --> 00:01:28,466
確實，而在這種情況下，問題是

47
00:01:28,466 --> 00:01:30,133
我們只替換儲存

48
00:01:30,133 --> 00:01:32,400
特定的 URL，所以如果 URL 不匹配