295
00:10:44,866 --> 00:10:47,200
重複的方法我們可以移動它

296
00:10:47,200 --> 00:10:48,800
它已經在兩個測試檔案中使用了

297
00:10:48,800 --> 00:10:50,933
所以我很樂意去做這個

298
00:10:50,933 --> 00:10:52,633
所以讓我在

299
00:10:52,633 --> 00:10:54,700
測試目標中創建一個助手的文件夾

300
00:10:54,700 --> 00:10:58,800
然後我將創建一個XCTestCase

301
00:10:58,800 --> 00:11:03,900
MemoryLeakTracking 輔助器

302
00:11:03,900 --> 00:11:06,300
好的，現在讓我們在

303
00:11:06,300 --> 00:11:07,833
XCTestCase 上創建一個擴展

304
00:11:07,833 --> 00:11:11,433
並移動追蹤內存洩漏輔助器

305
00:11:11,433 --> 00:11:14,933
到共享範疇 我們現在可以移除

306
00:11:14,933 --> 00:11:20,066
以前的函數，很好

307
00:11:20,066 --> 00:11:22,866
現在來跑測試，好的，他們都

308
00:11:22,866 --> 00:11:25,266
通過了，我們來提交

309
00:11:25,266 --> 00:11:28,300
提取內存洩漏

310
00:11:28,300 --> 00:11:32,133
跟蹤助手方法至共享的

311
00:11:32,133 --> 00:11:36,866
XCTestCase上的擴展

312
00:11:36,866 --> 00:11:40,233
很好，您還看到了什麼嗎

313
00:11:40,233 --> 00:11:42,366
我認為與

314
00:11:42,366 --> 00:11:44,366
相同的字符串創建的URL，所以這可以放在一個

315
00:11:44,366 --> 00:11:46,000
助手函數中

316
00:11:46,000 --> 00:11:50,066
好的，因為這是一個URL

317
00:11:50,066 --> 00:11:52,466
我們可以創建一個工廠方法，我們可以