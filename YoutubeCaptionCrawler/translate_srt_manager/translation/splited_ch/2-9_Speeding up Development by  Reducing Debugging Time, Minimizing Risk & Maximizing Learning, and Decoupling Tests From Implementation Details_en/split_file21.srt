510
00:18:47,500 --> 00:18:48,933
這裡是請求錯誤

511
00:18:48,933 --> 00:18:50,866
我們將錯誤傳遞給輔助函數

512
00:18:50,866 --> 00:18:52,633
我們期望收到的錯誤

513
00:18:52,633 --> 00:18:54,866
與請求錯誤相同

514
00:18:54,866 --> 00:18:56,766
讓我們看看是否通過

515
00:18:56,766 --> 00:18:59,666
它通過了，太棒了，那第二個

516
00:18:59,666 --> 00:19:00,700
 測試呢？

517
00:19:00,700 --> 00:19:02,766
由於我們不在乎錯誤的類型

518
00:19:02,766 --> 00:19:05,200
我們只在乎存在錯誤

519
00:19:05,200 --> 00:19:08,766
我們可以使用assert not nil輔助器

520
00:19:08,766 --> 00:19:12,133
通過將result error傳遞給數據

521
00:19:12,133 --> 00:19:15,333
nil，response，nil 和 error

522
00:19:15,333 --> 00:19:17,733
nil的匹配就是我們所關心的無效案例

523
00:19:17,733 --> 00:19:18,533
我們關心的

524
00:19:18,533 --> 00:19:22,300
到目前為止，讓我們看看是否通過

525
00:19:22,300 --> 00:19:24,700
它通過了，這是一個很好的重構

526
00:19:24,700 --> 00:19:25,333
看看這個

527
00:19:25,333 --> 00:19:28,066
測試方法現在簡單得多，我認為

528
00:19:28,066 --> 00:19:28,700
這是一個

529
00:19:28,700 --> 00:19:31,500
極具價值的重構，好的

530
00:19:31,500 --> 00:19:32,400
那麼

531
00:19:32,400 --> 00:19:36,000
讓我們提交提取重複的

532
00:19:36,000 --> 00:19:39,666
代碼到共享的，可重用的

533
00:19:39,666 --> 00:19:42,866
輔助方法以簡化

534
00:19:42,866 --> 00:19:47,266
測試。對，太棒了
