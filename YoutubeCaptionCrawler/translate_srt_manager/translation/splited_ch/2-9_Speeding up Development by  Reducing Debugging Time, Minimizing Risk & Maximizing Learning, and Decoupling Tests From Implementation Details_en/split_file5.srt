117
00:03:51,266 --> 00:03:54,300
攔截每一個網路

118
00:03:54,300 --> 00:03:57,733
請求而不是URL

119
00:03:57,733 --> 00:04:01,100
基於模擬，因為我們不

120
00:04:01,100 --> 00:04:04,533
想要在測試期間進行任何網路

121
00:04:04,533 --> 00:04:08,000
請求，同時我們

122
00:04:08,000 --> 00:04:12,700
希望我們的斷言更加精確

123
00:04:12,700 --> 00:04:16,233
關於當它們失敗時的錯誤

124
00:04:16,233 --> 00:04:19,100
對，非常具有描述性，就像它應該的那樣

125
00:04:19,100 --> 00:04:19,600
好的

126
00:04:19,600 --> 00:04:21,833
但是通過進行這種改變，我們失去了

127
00:04:21,833 --> 00:04:22,800
查看URL的價值，但由於那是

128
00:04:22,800 --> 00:04:24,933
另一種煩惱 

129
00:04:24,933 --> 00:04:26,066
以更精確的斷言

130
00:04:26,066 --> 00:04:28,000
將其移至單獨的測試中

131
00:04:28,000 --> 00:04:29,666
進行測試會更好

132
00:04:29,666 --> 00:04:33,033
確切地說，我們可以單獨地進行測試

133
00:04:33,033 --> 00:04:36,066
所以從URL獲取進行

134
00:04:36,066 --> 00:04:39,600
GET請求帶URL，好的

135
00:04:39,600 --> 00:04:43,166
因此我們需要攔截請求

136
00:04:43,166 --> 00:04:47,033
也需要停止攔截請求

137
00:04:47,033 --> 00:04:50,400
我們需要做的是以某種方式觀察

138
00:04:50,400 --> 00:04:54,000
所有請求具有某種觀察者

139
00:04:54,000 --> 00:04:56,233
閉包對吧，我們可以得到一個請求

140
00:04:56,233 --> 00:04:58,933
然後我們可以運行我們的斷言

141
00:04:58,933 --> 00:05:02,133
例如請求URL是一個

142
00:05:02,133 --> 00:05:03,166
給定的URL
