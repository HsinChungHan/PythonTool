106
00:03:33,266 --> 00:03:34,933
我們繼承自 ViewController，並且

107
00:03:34,933 --> 00:03:36,633
因為它是另一個模塊

108
00:03:36,633 --> 00:03:38,300
我們用不同的顏色來表示它

109
00:03:38,300 --> 00:03:39,566
我喜歡這樣，所以

110
00:03:39,566 --> 00:03:40,233
FeedViewController

111
00:03:40,233 --> 00:03:43,033
源自於 UIViewController，這意味著

112
00:03:43,033 --> 00:03:44,133
我們現在依賴

113
00:03:44,133 --> 00:03:46,133
不僅僅是 UIViewController，而且是 UIKit

114
00:03:46,133 --> 00:03:47,733
確實，因為這就是

115
00:03:47,733 --> 00:03:49,733
UIViewController 所在的模塊

116
00:03:49,733 --> 00:03:51,333
定義的地方

117
00:03:51,333 --> 00:03:53,566
因此我們必需在此引入 UIKit，且

118
00:03:53,566 --> 00:03:54,700
這是一種來源

119
00:03:54,700 --> 00:03:57,433
從我們的專案對 UIKit 的代碼依賴

120
00:03:57,433 --> 00:03:58,000
專案

121
00:03:58,000 --> 00:04:00,233
以及最強的結合方式

122
00:04:00,233 --> 00:04:02,066
繼承

123
00:04:02,066 --> 00:04:04,700
這是對的，但我們有更多的

124
00:04:04,700 --> 00:04:05,666
依賴在這裡

125
00:04:05,666 --> 00:04:08,866
在上一集我們有個

126
00:04:08,866 --> 00:04:09,333
loadFeed

127
00:04:09,333 --> 00:04:12,633
封閉的方式，所以讓我

128
00:04:12,633 --> 00:04:14,700
迅速地貼這段代碼在這裡，就這樣

129
00:04:14,700 --> 00:04:16,766
非常好，所以我們有一個封閉的

130
00:04:16,766 --> 00:04:18,233
可以加載feed的方法，並在這個

131
00:04:18,233 --> 00:04:19,600
情況下，假設它是一個字符串的數組

132
00:04:19,600 --> 00:04:21,333
所以我們可以在表視圖中顯示它