179
00:22:01,640 --> 00:22:09,640
就效能方面來說，產生並儲存所有的調試資訊可能需要時間和額外的儲存空間。

180
00:22:09,640 --> 00:22:14,640
這就是為什麼我們並不總是需要完整等級的調試資訊細節。

181
00:22:14,640 --> 00:22:24,640
如果我們使用DWARF與DSYM進行調試建構，它將需要消耗更多時間，

182
00:22:24,640 --> 00:22:30,640
但我們希望調試建構可以快速完成，所以我們不進行這樣的操作。

183
00:22:30,640 --> 00:22:38,640
另一方面，我們希望優化釋出版本的建構，這就是為什麼我們作為編譯器，

184
00:22:38,640 --> 00:22:44,640
要應用各種優化方式，如減少二進制大小或使代碼運行更快，

185
00:22:44,640 --> 00:22:53,640
我們已在之前的建構設定課程中談過這個問題，關於優化的選項。

186
00:22:53,640 --> 00:23:00,640
但這裡最重要的一點是，我們希望釋出版本的建構要是優化的，