158
00:19:15,640 --> 00:19:23,640
source code 變動會改變編譯器在生成二進制檔前所做的更動，所以結果是最佳化的。

159
00:19:23,640 --> 00:19:29,640
一個編譯器優化的例子是将函式的內容直接插入，而不是定義該

160
00:19:29,640 --> 00:19:35,640
函式然後調用它，這樣會需要更多的時間和記憶體，因為體內容和參數需要被

161
00:19:35,640 --> 00:19:45,640
加載到棧上。所以作為一個習題，在我們的 EssentialApp 的項目中，在 SceneDelegate，

162
00:19:45,640 --> 00:19:54,640
willConnectToScene 函式調用了一個 configureWindow 函式，並且是唯一一

163
00:19:54,640 --> 00:20:01,640
個調用這個函式的函式。所以如果我們在發行版本中啟用了優化，編譯器可能會

164
00:20:01,640 --> 00:20:09,640
選擇把 configureWindow 函式直接插入到原處。這意味著它將取出函式体，刪除這個函式，