165
00:20:09,640 --> 00:20:15,640
因此它將永遠不會存在，並將調用地點替換為函數的主體。

166
00:20:15,640 --> 00:20:24,640
這將導致執行更快，因為我們不需要在堆疊上加載這個函數，

167
00:20:24,640 --> 00:20:33,640
但這實在難以符號化，因為我們需要所有關於源代碼的資訊，

168
00:20:33,640 --> 00:20:39,640
以及在優化前的狀態，已應用了哪些優化等等。所以除非我們有完整的

169
00:20:39,640 --> 00:20:48,640
DWARF信息，我們實在無法反向符號化。這僅僅是一個練習。

170
00:20:48,640 --> 00:20:53,640
再次，對於有關調試符號以及他們如何被用於符號化的更多細節，

171
00:20:53,640 --> 00:20:57,640
請回顧我推薦的WWDC會議。

172
00:21:00,640 --> 00:21:07,640
buildSetting debugInformationFormat控制調試信息的格式。