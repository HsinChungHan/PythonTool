

1
00:00:01,433 --> 00:00:03,500
嗨，Mike，嗨，Caio

2
00:00:03,500 --> 00:00:05,200
我們一直在談論

3
00:00:05,200 --> 00:00:07,666
架構並結束了這個

4
00:00:07,666 --> 00:00:10,933
模組圖，對，這只是證明

5
00:00:10,933 --> 00:00:11,666
概念的證明

6
00:00:11,666 --> 00:00:13,333
我們還討論到有時候

7
00:00:13,333 --> 00:00:15,266
更加單一的

8
00:00:15,266 --> 00:00:17,600
方法實際上能夠更好

9
00:00:17,600 --> 00:00:18,700
解決問題

10
00:00:18,700 --> 00:00:20,633
那麼對我來說什麼是好的架構？

11
00:00:20,633 --> 00:00:22,466
對我來說是解決

12
00:00:22,466 --> 00:00:24,466
手頭上的問題的架構，並且我們提出

13
00:00:24,466 --> 00:00:26,533
這個架構是為了創造

14
00:00:26,533 --> 00:00:27,433
一個問題

15
00:00:27,433 --> 00:00:30,300
並解決它，否則所有

16
00:00:30,300 --> 00:00:32,300
的架構都是好的

17
00:00:32,300 --> 00:00:34,700
是的，他們需要解決一些問題，是的並

18
00:00:34,700 --> 00:00:35,500
有效地解決它

19
00:00:35,500 --> 00:00:39,200
以優雅的方式，是的，所以我們的觀點是

20
00:00:39,200 --> 00:00:39,833
就是

21
00:00:39,833 --> 00:00:41,500
決定你要選擇哪種架構

22
00:00:41,500 --> 00:00:43,266
完全取決於

23
00:00:43,266 --> 00:00:44,300
需求

24
00:00:44,300 --> 00:00:46,233
如果你有糟糕的需求，你也能

25
00:00:46,233 --> 00:00:47,733
結果得到更好的架構

26
00:00:47,733 --> 00:00:48,700
對的


27
00:00:48,700 --> 00:00:51,733
確實如此，處理要求的過程

28
00:00:51,733 --> 00:00:54,700
和精煉需求

29
00:00:54,700 --> 00:00:56,066
是一種持續的過程

30
00:00:56,066 --> 00:00:58,533
並使更多的事物為

31
00:00:58,533 --> 00:01:00,133
開發團隊所知

32
00:01:00,133 --> 00:01:02,466
我想大膽地說，如果你

33
00:01:02,466 --> 00:01:04,766
有非常好的需求

34
00:01:04,766 --> 00:01:07,200
你最終將得到良好的架構

35
00:01:07,200 --> 00:01:08,300
呃

36
00:01:08,300 --> 00:01:10,466
對，這可能是機率性的，可能我不

37
00:01:10,466 --> 00:01:12,133
知道，像沒有

38
00:01:12,133 --> 00:01:14,700
確定性。好吧，它增加了機會

39
00:01:14,700 --> 00:01:15,433
對，確實

40
00:01:15,433 --> 00:01:17,033
它的可能性確實更大，我會

41
00:01:17,033 --> 00:01:18,700
說，因為如果你有清晰定義的

42
00:01:18,700 --> 00:01:19,433
需求

43
00:01:19,433 --> 00:01:21,900
設計你的系統就更容易

44
00:01:21,900 --> 00:01:22,933
絕對，因為

45
00:01:22,933 --> 00:01:25,500
你知道你需要建造什麼，我認為

46
00:01:25,500 --> 00:01:26,866
大部分問題

47
00:01:26,866 --> 00:01:30,066
發生在開發者需要

48
00:01:30,066 --> 00:01:31,666
做出假設的時候

49
00:01:31,666 --> 00:01:34,233
這是由於與

50
00:01:34,233 --> 00:01:35,033
其他

51
00:01:35,033 --> 00:01:36,866
團隊成員的溝通不良，並且我並不是說

52
00:01:36,866 --> 00:01:38,300
開發者是

53
00:01:38,300 --> 00:01:41,200
受害者，不，溝通才是

54
00:01:41,200 --> 00:01:42,366
受害者。

55
00:01:42,366 --> 00:01:45,600
你知道從各個方面，但設計的目的

56
00:01:45,600 --> 00:01:46,300
是設計

57
00:01:46,300 --> 00:01:49,333
不僅僅是解決當前的問題

58
00:01:49,333 --> 00:01:52,866
因為軟體是靈活的，它一直在

59
00:01:52,866 --> 00:01:55,266
變化，所以你需要有一個

60
00:01:55,266 --> 00:01:58,866
平衡，既要歡迎未來的變化，

61
00:01:58,866 --> 00:02:00,633
又要解決當前的問題，你

62
00:02:00,633 --> 00:02:02,700
不想過度抽象化

63
00:02:02,700 --> 00:02:04,866
來解決可能
64
00:02:04,866 --> 00:02:05,833
永遠不會發生的未來問題。

65
00:02:05,833 --> 00:02:06,933
但你也不希望讓你的

66
00:02:06,933 --> 00:02:09,333
架構夠堅硬，如果你

67
00:02:09,333 --> 00:02:10,633
需要改變事情，

68
00:02:10,633 --> 00:02:13,733
它太難。事實上，這是一個

69
00:02:13,733 --> 00:02:14,800
非常，非常

70
00:02:14,800 --> 00:02:17,100
難以解決的問題。基本上，你

71
00:02:17,100 --> 00:02:19,100
需要促進

72
00:02:19,100 --> 00:02:21,433
未來的需求，同時你不

73
00:02:21,433 --> 00:02:23,666
知道這些需求將是什麼。

74
00:02:23,666 --> 00:02:27,100
那你該怎麼辦？你建立

75
00:02:27,100 --> 00:02:29,666
良好的流程。這就是你從

76
00:02:29,666 --> 00:02:30,800
需求開始，

77
00:02:30,800 --> 00:02:33,666
到計劃，到設計，到構建

78
00:02:33,666 --> 00:02:34,466
到編碼。

79
00:02:34,466 --> 00:02:37,500
一切事物的交流，當然是非常

80
00:02:37,500 --> 00:02:38,933
非常重要的

81
00:02:38,933 --> 00:02:40,700
好的架構就是一種

82
00:02:40,700 --> 00:02:43,333
溝通的方式，當然是的

83
00:02:43,333 --> 00:02:45,333
就像需求一樣，就像

84
00:02:45,333 --> 00:02:48,066
圖表或規劃會議一樣

85
00:02:48,066 --> 00:02:50,866
確實，我們展示了糟糕的 

86
00:02:50,866 --> 00:02:51,900
需求 

87
00:02:51,900 --> 00:02:55,033
糟糕的規劃，糟糕的執行可能導致

88
00:02:55,033 --> 00:02:57,733
你最終得到一個非常

89
00:02:57,733 --> 00:03:01,033
僵硬的架構，我們沒有

90
00:03:01,033 --> 00:03:02,400
明確的邊界 

91
00:03:02,400 --> 00:03:06,000
我們沒有明確的控制流程

92
00:03:06,000 --> 00:03:08,533
這裡的依賴圖表顯示

93
00:03:08,533 --> 00:03:10,133
每個模組都依賴於

94
00:03:10,133 --> 00:03:12,233
每個其他的模組，這使得事情變得

95
00:03:12,233 --> 00:03:13,433
非常僵硬 

96
00:03:13,433 --> 00:03:17,100
並且脆弱，像麵條一樣的架構 

97
00:03:17,100 --> 00:03:19,900
我們別再自欺欺人了，對，並且

98
00:03:19,900 --> 00:03:20,933
大多數時候 

99
00:03:20,933 --> 00:03:22,700
這是糟糕需求的副產品 

100
00:03:22,700 --> 00:03:24,700
對，那就是

101
00:03:24,700 --> 00:03:27,433
一切開始的地方，對，如果你正在試圖

102
00:03:27,433 --> 00:03:27,833
滿足 

103
00:03:27,833 --> 00:03:30,700
當前的需求，並且

104
00:03:30,700 --> 00:03:32,300
那是一個糟糕的需求 

105
00:03:32,300 --> 00:03:34,466
你沒有長期的視野，沒有

106
00:03:34,466 --> 00:03:35,666
長期目標

107
00:03:35,666 --> 00:03:38,633
任何建築都可以，就像是

108
00:03:38,633 --> 00:03:39,266
語句

109
00:03:39,266 --> 00:03:41,200
如果你不知道自己要去哪，任何

110
00:03:41,200 --> 00:03:42,300
路都可以

111
00:03:42,300 --> 00:03:45,666
對的，我喜歡這一點，沒錯

112
00:03:45,666 --> 00:03:46,700
完全正確

113
00:03:46,700 --> 00:03:50,400
這也是缺乏紀律的結果

114
00:03:50,400 --> 00:03:52,400
為了細化需求而

115
00:03:52,400 --> 00:03:54,933
為了學習更多，去在意

116
00:03:54,933 --> 00:03:58,000
去找到好，我們這裡該怎麼做？

117
00:03:58,000 --> 00:03:59,433
我們哪裡該怎麼做，你知道的

118
00:03:59,433 --> 00:04:02,766
建立一些邏輯分支

119
00:04:02,766 --> 00:04:05,500
一些邊緣案例，因為需求

120
00:04:05,500 --> 00:04:07,266
如果是糟糕的，並不代表代碼

121
00:04:07,266 --> 00:04:09,033
應該是糟糕的，並不代表產品

122
00:04:09,033 --> 00:04:10,866
應該有錯誤或

123
00:04:10,866 --> 00:04:14,000
這隻錯誤，那麼要誰來負責？開發者

124
00:04:14,000 --> 00:04:16,133
寫的代碼？分析師

125
00:04:16,133 --> 00:04:17,600
寫出來的需求？

126
00:04:17,600 --> 00:04:19,666
產品經理，業務人員，誰該

127
00:04:19,666 --> 00:04:21,166
被責怪呢？對我來說，我不喜歡去責怪

128
00:04:21,166 --> 00:04:22,000
任何人

129
00:04:22,000 --> 00:04:23,833
我認為這是一個溝通問題

130
00:04:23,833 --> 00:04:25,333
這是可以被解決的，

131
00:04:25,333 --> 00:04:27,100
這是每個人的責任

132
00:04:27,100 --> 00:04:29,100
每個人應該對自己負責

133
00:04:29,100 --> 00:04:31,166
確切地說，在一個功能型團隊中，如果一個

134
00:04:31,166 --> 00:04:32,800
開發員發現需求

135
00:04:32,800 --> 00:04:34,933
不夠好，那麼開發員將會幫助

136
00:04:34,933 --> 00:04:37,166
分析師或是寫下它的每一個人來

137
00:04:37,166 --> 00:04:38,000
改進它

138
00:04:38,000 --> 00:04:40,533
並不會有責怪的，如果分析師看到

139
00:04:40,533 --> 00:04:41,100
那個

140
00:04:41,100 --> 00:04:43,833
開發者們建造的最終結果

141
00:04:43,833 --> 00:04:44,800
並沒有符合

142
00:04:44,800 --> 00:04:46,300
實際的需求，他們將會

143
00:04:46,300 --> 00:04:48,133
讓開發者負責

144
00:04:48,133 --> 00:04:50,800
對，這是最理想的情況

145
00:04:50,800 --> 00:04:51,833
不幸地是，

146
00:04:51,833 --> 00:04:54,866
並非所有地方都是如此，那麼為何

147
00:04:54,866 --> 00:04:57,433
我們不展示一下你可能會如何

148
00:04:57,433 --> 00:04:58,400
最終落入

149
00:04:58,400 --> 00:05:01,100
就像你剛剛提到的狀態，好的

150
00:05:01,100 --> 00:05:03,100
所以我們正在討論這個Feed

151
00:05:03,100 --> 00:05:05,266
功能，所以讓我們遵循相同的範例

152
00:05:05,266 --> 00:05:06,400
我們一直在用的對吧

153
00:05:06,400 --> 00:05:09,666
假想一下我們收到一個新任務

154
00:05:09,666 --> 00:05:12,466
我們打開我們的項目管理工具，然後

155
00:05:12,466 --> 00:05:13,733
我們看到這個新的情節

156
00:05:13,733 --> 00:05:16,933
分配給我們，好的，如你所見

157
00:05:16,933 --> 00:05:19,166
作為用戶，我希望這個應用載入至

158
00:05:19,166 --> 00:05:21,500
信息流，所以我可以看到信息流

159
00:05:21,500 --> 00:05:24,300
好的，我們在這裡笑著，但我見過

160
00:05:24,300 --> 00:05:25,600
這些情節

161
00:05:25,600 --> 00:05:28,000
無時無刻不在，絕對，絕對

162
00:05:28,000 --> 00:05:29,100
這是真的

163
00:05:29,100 --> 00:05:30,533
和這些情節的問題是

164
00:05:30,533 --> 00:05:32,533
首先，開發者並不

165
00:05:32,533 --> 00:05:34,066
真正明白我們提供哪種價值

166
00:05:34,066 --> 00:05:34,933
為我們的客戶，這些有什麼好處

167
00:05:34,933 --> 00:05:37,266
在使用這個功能時

168
00:05:37,266 --> 00:05:38,633
為什麼我們建造這個，你知道這個

169
00:05:38,633 --> 00:05:40,800
太膚淺了

170
00:05:40,800 --> 00:05:41,900
我要怎麼建造這個，哪裡是

171
00:05:41,900 --> 00:05:43,500
錯誤案例

172
00:05:43,500 --> 00:05:45,166
對，甚麼是資訊流，載入是什麼意思

173
00:05:45,166 --> 00:05:48,000
從哪裡載入

174
00:05:48,000 --> 00:05:50,533
是的，所以然後我們看接受

175
00:05:50,533 --> 00:05:52,400
標準

176
00:05:52,400 --> 00:05:53,666
給定一個用戶，當用戶打開了

177
00:05:53,666 --> 00:05:56,066


178
00:05:56,066 --> 00:05:56,700
餵（feed）

179
00:05:56,700 --> 00:06:00,066
然後feed就會被顯示出來，對，這聽起來很明顯

180
00:06:00,066 --> 00:06:02,400
聽起來很明顯，但是其中有很多問題

181
00:06:02,400 --> 00:06:03,100
問題

182
00:06:03,100 --> 00:06:05,033
其中可能還參雜了許多

183
00:06:05,033 --> 00:06:06,400
驅動

184
00:06:06,400 --> 00:06:09,500
我們的測試，對，但是我們提供了什麼樣的價值

185
00:06:09,500 --> 00:06:10,466
我們提供什麼樣的價值呢

186
00:06:10,466 --> 00:06:12,066
對，這正好是

187
00:06:12,066 --> 00:06:13,633
我們之前提到的誤解的

188
00:06:13,633 --> 00:06:16,933
典型例子

189
00:06:16,933 --> 00:06:20,133
所以這裡明顯地

190
00:06:20,133 --> 00:06:22,533
分析師或不重要的人可能

191
00:06:22,533 --> 00:06:23,900
在某些情況下也可能是開發員

192
00:06:23,900 --> 00:06:26,466
他們沒有溝通好

193
00:06:26,466 --> 00:06:27,333
溝通得恰到好處

194
00:06:27,333 --> 00:06:30,866
這個系統的意圖提到

195
00:06:30,866 --> 00:06:33,833
邊緣案例，如你所說的價值，價值在哪裡對於

196
00:06:33,833 --> 00:06:35,733
客戶而言，價值在哪裡，所以我們怎麼改善

197
00:06:35,733 --> 00:06:38,133
我們怎麼可以改進這個，因為如果我收到一個像這樣的故事

198
00:06:38,133 --> 00:06:40,233
我會做的就是回到

199
00:06:40,233 --> 00:06:42,533
分析師那裡或是誰寫的

200
00:06:42,533 --> 00:06:44,400
然後開始問問題，像是我們要如何

201
00:06:44,400 --> 00:06:46,066
我們該如何改進這個，對我來說這就是

202
00:06:46,066 --> 00:06:47,733
我們該如何改進這個，對我來說這是件重要的事

203
00:06:47,733 --> 00:06:48,466
價值


204
00:06:48,466 --> 00:06:50,866
對我來說，做對 BDD 的

205
00:06:50,866 --> 00:06:52,066
部分就是對話

206
00:06:52,066 --> 00:06:53,500
它不關於工具，不關於

207
00:06:53,500 --> 00:06:55,833
測試，是理解

208
00:06:55,833 --> 00:06:59,433
你能給客戶的
209
00:06:59,433 --> 00:07:02,133
提供的最大值，抱歉但

210
00:07:02,133 --> 00:07:03,333
你不會提供那個

211
00:07:03,333 --> 00:07:06,700
三行寫在那裡

212
00:07:06,700 --> 00:07:09,166
對，你需要挖得更深

213
00:07:09,166 --> 00:07:10,066
基本上

214
00:07:10,066 --> 00:07:12,300
你需要更深入地理解所有的

215
00:07:12,300 --> 00:07:14,633
可能存在的情境

216
00:07:14,633 --> 00:07:16,533
雖然這對我來說是一個糟糕的故事，這

217
00:07:16,533 --> 00:07:17,833
是開始

218
00:07:17,833 --> 00:07:19,833
一個非常好的對話你會

219
00:07:19,833 --> 00:07:21,100
與業務部門進行

220
00:07:21,100 --> 00:07:23,166
了解價值主張

221
00:07:23,166 --> 00:07:24,633
絕對的，如果你去

222
00:07:24,633 --> 00:07:26,633
並以負面的方式開始對話

223
00:07:26,633 --> 00:07:27,900
並且

224
00:07:27,900 --> 00:07:30,133
指責他人，那麼我不認為你會

225
00:07:30,133 --> 00:07:31,566
走得很

226
00:07:31,566 --> 00:07:34,800
遠，但那是清晰的訊息

227
00:07:34,800 --> 00:07:37,033
業務部門在傳達或者這個

228
00:07:37,033 --> 00:07:38,866
代表業務部門的分析師


229
00:07:38,866 --> 00:07:42,066
正在轉交給你所以現在以在你手上

230
00:07:42,066 --> 00:07:46,533
去了解更多並去建立一個案例

231
00:07:46,533 --> 00:07:48,700
最大的問題在於開發者

232
00:07:48,700 --> 00:07:50,000
看到像這樣的故事

233
00:07:50,000 --> 00:07:51,500
卻害怕提問

234
00:07:51,500 --> 00:07:52,233
因為他們擔心他們會

235
00:07:52,233 --> 00:07:53,433
聽起來傻

236
00:07:53,433 --> 00:07:54,633
他們認為他們會喪失

237
00:07:54,633 --> 00:07:56,933
因為

238
00:07:56,933 --> 00:07:58,933
他們認為他們應該能夠閱讀

239
00:07:58,933 --> 00:08:00,233
這些並推斷出

240
00:08:00,233 --> 00:08:01,566
一切的訊息，而這就是最大的

241
00:08:01,566 --> 00:08:04,300
錯誤對吧，我不能

242
00:08:04,300 --> 00:08:07,033
因此，我始終支持提問，不論

243
00:08:07,033 --> 00:08:08,133
多麼

244
00:08:08,133 --> 00:08:10,633
愚蠢或者不重要，你知道那個

245
00:08:10,633 --> 00:08:11,166
願景

246
00:08:11,166 --> 00:08:13,433
對每個人來說應該是共同的，或者應該是

247
00:08:13,433 --> 00:08:14,533
對每個人來說共同的

248
00:08:14,533 --> 00:08:16,700
我們在同一個團隊中，那是我的

249
00:08:16,700 --> 00:08:18,400
對這件事的理解

250
00:08:18,400 --> 00:08:20,933
對我來說，那實際上是我的工作，我擁有

251
00:08:20,933 --> 00:08:22,300
技術知識

252
00:08:22,300 --> 00:08:24,133
來提出正確的問題並獲得答案

253
00:08:24,133 --> 00:08:25,666
提供最大量的

254
00:08:25,666 --> 00:08:26,066
價值

255
00:08:26,066 --> 00:08:28,533
給客戶，這就是我們如何

256
00:08:28,533 --> 00:08:29,900
創造良好的產品

257
00:08:29,900 --> 00:08:32,933
你有良好的習慣，其中之一就是

258
00:08:32,933 --> 00:08:34,766
問很多問題，這樣你才能夠

259
00:08:34,766 --> 00:08:36,366
更好地理解

260
00:08:36,366 --> 00:08:39,566
客戶的需求是什麼，這是

261
00:08:39,566 --> 00:08:40,366
需要的

262
00:08:40,366 --> 00:08:43,200
商業的需求，然後你可以

263
00:08:43,200 --> 00:08:44,300
實現這種需求

264
00:08:44,300 --> 00:08:47,733
透過程式碼，是的，所以我們希望

265
00:08:47,733 --> 00:08:49,033
最終能達到的

266
00:08:49,033 --> 00:08:51,500
是一份更為精確的文件

267
00:08:51,500 --> 00:08:52,366
比這個好

268
00:08:52,366 --> 00:08:55,600
例如，開始只是

269
00:08:55,600 --> 00:08:58,133
載入源並顯示給用戶，可能就會

270
00:08:58,133 --> 00:08:59,266
結束為

271
00:08:59,266 --> 00:09:01,433
一個在线客戶，這是

272
00:09:01,433 --> 00:09:02,366
具有

273
00:09:02,366 --> 00:09:04,133
連接性的客戶，我希望應用程式能夠

274
00:09:04,133 --> 00:09:06,866
自動載入我的最新影像源

275
00:09:06,866 --> 00:09:09,500
所以，這是影像源，這樣我就可以一直

276
00:09:09,500 --> 00:09:11,266
欣賞最新的圖片.

277
00:09:11,266 --> 00:09:14,133
我朋友的那部分好了, 所以現在我可以看到

278
00:09:14,133 --> 00:09:15,666
價值主張在這裡

279
00:09:15,666 --> 00:09:18,800
對，我們現在正在進一步深入

280
00:09:18,800 --> 00:09:21,333
我們從一個超高層次的視角開始

281
00:09:21,333 --> 00:09:22,800
看我們正在做什麼

282
00:09:22,800 --> 00:09:25,333
但在進行了正確的對話之後

283
00:09:25,333 --> 00:09:26,800
我們了解到

284
00:09:26,800 --> 00:09:29,433
這個功能就是要連接朋友

285
00:09:29,433 --> 00:09:30,800
他們分享各種

286
00:09:30,800 --> 00:09:33,266
照片或他們的旅行或他們的食物或者

287
00:09:33,266 --> 00:09:34,533
他們想與其朋友分享的任何東西

288
00:09:34,533 --> 00:09:35,100
朋友

289
00:09:35,100 --> 00:09:36,633
對，還有其他很多使用者

290
00:09:36,633 --> 00:09:38,300
經驗的信息

291
00:09:38,300 --> 00:09:41,200
例如自動加載最新的

292
00:09:41,200 --> 00:09:41,600
和

293
00:09:41,600 --> 00:09:45,266
我的動態，對，就是我的最新的動態

294
00:09:45,266 --> 00:09:47,666
是的，它是客製的，是的它對客戶有價值

295
00:09:47,666 --> 00:09:48,800
對於顧客有價值

296
00:09:48,800 --> 00:09:50,866
好了, 所以現在我們可以開始繪製更好的

297
00:09:50,866 --> 00:09:53,200
圖片

298
00:09:53,200 --> 00:09:56,300
關於系統，對，從這個敘述中

299
00:09:56,300 --> 00:09:58,933
我們可以提出場景或者

300
00:09:58,933 --> 00:10:01,733
接受標準

301
00:10:01,733 --> 00:10:04,466
例如，假設客戶有

302
00:10:04,466 --> 00:10:05,500
連接性

303
00:10:05,500 --> 00:10:08,133
當客戶請求查看

304
00:10:08,133 --> 00:10:08,700
動態

305
00:10:08,700 --> 00:10:10,366
然後應用程式應該顯示最新的

306
00:10:10,366 --> 00:10:12,233
遠端來的訊息

307
00:10:12,233 --> 00:10:15,333
並替換掉新訊息的快取

308
00:10:15,333 --> 00:10:17,733
好的，所以我們需要將訊息進行快取

309
00:10:17,733 --> 00:10:18,466
不知道怎麼做

310
00:10:18,466 --> 00:10:20,933
對，確實如此，透過提出對的

311
00:10:20,933 --> 00:10:21,900
問題

312
00:10:21,900 --> 00:10:23,833
例如，如果我沒有

313
00:10:23,833 --> 00:10:26,000
連接性，我們就提出了快取的概念

314
00:10:26,000 --> 00:10:27,200
最新下載的訊息，並且

315
00:10:27,200 --> 00:10:30,233
這讓我們創造出一個

316
00:10:30,233 --> 00:10:30,933
次要敘事作為離線客戶

317
00:10:30,933 --> 00:10:34,366
我希望應用程式能顯示最新儲存的

318
00:10:34,366 --> 00:10:36,933
我的圖像訊息版本

319
00:10:36,933 --> 00:10:38,366
所以我可以隨時享受我的

320
00:10:38,366 --> 00:10:40,300
朋友的圖片，對，所以如果你在地鐵裡

321
00:10:40,300 --> 00:10:42,633
而且你打開應用程式，你仍然能看到

322
00:10:42,633 --> 00:10:44,133
某些東西，你不只會看到錯誤

323
00:10:44,133 --> 00:10:45,666
訊息

324
00:10:45,666 --> 00:10:46,700
沒錯，只需提出問題，但

325
00:10:46,700 --> 00:10:48,933
看我們如何

326
00:10:48,933 --> 00:10:49,900
擴大價值，是的，我們正在

327
00:10:49,900 --> 00:10:53,100
分解

328
00:10:53,100 --> 00:10:54,066
系統需求，並且我們可以

329
00:10:54,066 --> 00:10:56,866
分岔出

330
00:10:56,866 --> 00:10:58,233
去

331
00:10:58,233 --> 00:11:01,500
線上和離線兩方面

332
00:11:01,500 --> 00:11:04,533
使用者經驗從這裡，我們可以

333
00:11:04,533 --> 00:11:04,933
甚至

334
00:11:04,933 --> 00:11:08,466
分支出來，如果我們有一個暫存的

335
00:11:08,466 --> 00:11:10,300
訊息餵飼(feed)的版本，如果我們沒有

336
00:11:10,300 --> 00:11:11,900
暫存的訊息餵飼(feed)的版本，那該

337
00:11:11,900 --> 00:11:12,866
會發生什麼呢？

338
00:11:12,866 --> 00:11:15,833
這會引領我們走向更多的情境與

339
00:11:15,833 --> 00:11:16,700
例如，

340
00:11:16,700 --> 00:11:17,900
當顧客沒有

341
00:11:17,900 --> 00:11:20,066
連線且要求看到

342
00:11:20,066 --> 00:11:21,033
訊息餵飼(feed)時，

343
00:11:21,033 --> 00:11:22,933
那麼APP應該顯示最新

344
00:11:22,933 --> 00:11:24,366
保存的訊息餵飼(feed),

345
00:11:24,366 --> 00:11:27,200
但是如果暫存中什麼都沒有，

346
00:11:27,200 --> 00:11:28,700
應用程式應該顯示一個錯誤

347
00:11:28,700 --> 00:11:30,700
對，但價值主張是要

348
00:11:30,700 --> 00:11:32,866
始終嘗試向用戶顯示一些東西

349
00:11:32,866 --> 00:11:35,200
而這是你只能得到的種類的價值

350
00:11:35,200 --> 00:11:37,033
通過技術人員的對話

351
00:11:37,033 --> 00:11:38,066
與商業架橋商業

352
00:11:38,066 --> 00:11:40,800
和技術面

353
00:11:40,800 --> 00:11:42,133
是對客戶提供價值的超級重要

354
00:11:42,133 --> 00:11:44,233
如你所見，我們可以寫一些

355
00:11:44,233 --> 00:11:45,500
對客戶非常重要的事情

356
00:11:45,500 --> 00:11:47,600
以你所見，我們可以編寫一些

357
00:11:47,600 --> 00:11:49,200
高高層次的測試

358
00:11:49,200 --> 00:11:51,266
從這些情境中不只是測試

359
00:11:51,266 --> 00:11:52,700
對，但是通過測試

360
00:11:52,700 --> 00:11:55,833
你可以看到組件的出現你可以

361
00:11:55,833 --> 00:11:57,266
看到行為的出現

362
00:11:57,266 --> 00:12:00,233
這不應該需要長時間和長時間的會議

363
00:12:00,233 --> 00:12:01,200
不是這樣

364
00:12:01,200 --> 00:12:03,666
這可能只是一個非正式的對話我

365
00:12:03,666 --> 00:12:06,300
甚至不會把這稱為會議

366
00:12:06,300 --> 00:12:08,633
對對，絕對如此，還有其他的

367
00:12:08,633 --> 00:12:09,433
方法

368
00:12:09,433 --> 00:12:12,133
對，BDD不是唯一的實現方式

369
00:12:12,133 --> 00:12:12,633
這的

370
00:12:12,633 --> 00:12:15,333
對，我知道你非常喜歡Ivar

371
00:12:15,333 --> 00:12:16,633
Jacobson

372
00:12:16,633 --> 00:12:19,666
有罪，那麼你為什麼不給我們解釋一下

373
00:12:19,666 --> 00:12:21,200
稍微談談用例

374
00:12:21,200 --> 00:12:24,366
對，所以我們可以用另一種

375
00:12:24,366 --> 00:12:25,333
形式來表達

376
00:12:25,333 --> 00:12:28,000
基本上是我們在情境中所遇到的

377
00:12:28,000 --> 00:12:29,200
當然這不一樣

378
00:12:29,200 --> 00:12:32,533
但在這裡我們可以看到一種算法視圖

379
00:12:32,533 --> 00:12:35,900
關於系統應該做什麼，在這個情況下我們有Load Feed


381
00:12:38,133 --> 00:12:41,900
將網址作為輸入，

382
00:12:41,900 --> 00:12:44,866
這由數據所代表，然後我們有

383
00:12:44,866 --> 00:12:46,366
一個主要課程，

384
00:12:46,366 --> 00:12:49,600
在這種情況下，我們已經將其表示為

385
00:12:49,600 --> 00:12:51,033
也是快樂路徑，

386
00:12:51,033 --> 00:12:55,500
然後我們有一系列步驟，

387
00:12:55,500 --> 00:12:58,533
實際上是有限的步驟序列，

388
00:12:58,533 --> 00:13:01,600
這個組件應該做的。

389
00:13:01,600 --> 00:13:04,533
我喜歡這裡不提及

390
00:13:04,533 --> 00:13:06,366
用戶界面或者

391
00:13:06,366 --> 00:13:09,833
向用戶顯示訊息，或者按下按鈕

392
00:13:09,833 --> 00:13:11,200
之類的

393
00:13:11,200 --> 00:13:14,233
或者任何用戶與系統交互的事情，

394
00:13:14,233 --> 00:13:15,033
這裡，

395
00:13:15,033 --> 00:13:17,500
是更加程序化的方式來

396
00:13:17,500 --> 00:13:19,600
處理它，可能更具技術性，他們不必

397
00:13:19,600 --> 00:13:20,066
是

398
00:13:20,066 --> 00:13:22,000
但在這種情況下他們更具技術性，

399
00:13:22,000 --> 00:13:24,000
對我來說，它們是一種補充，

400
00:13:24,000 --> 00:13:25,433
對於用戶故事的補充，我們不認為我們

401
00:13:25,433 --> 00:13:27,033
必須在

402
00:13:27,033 --> 00:13:30,000
BDD或者用例之間做選擇，不，我認為我們可以從

403
00:13:30,000 --> 00:13:30,700
BDD故事開始，我們可以進行對話，

404
00:13:30,700 --> 00:13:33,200


405
00:13:33,200 --> 00:13:35,266
我們可以改善它，我們可以記錄下來

406
00:13:35,266 --> 00:13:36,800
然後從我們從那些裡學到的

407
00:13:36,800 --> 00:13:38,700
故事和那些場景出發

408
00:13:38,700 --> 00:13:41,166
我們可以開始進一步探索更多的

409
00:13:41,166 --> 00:13:42,300
技術面

410
00:13:42,300 --> 00:13:44,466
使用案例對吧，絕對對

411
00:13:44,466 --> 00:13:46,366
例如，我們這裡有一種概念

412
00:13:46,366 --> 00:13:49,166
無效的數據，我們本可以將它寫入

413
00:13:49,166 --> 00:13:49,733
我們的場景，我們的 BDD 故事中，但

414
00:13:49,733 --> 00:13:52,700
我喜歡以

415
00:13:52,700 --> 00:13:53,500
更技術的方法來呈現，並且

416
00:13:53,500 --> 00:13:55,600
以分開的格式存在

417
00:13:55,600 --> 00:13:57,100
作為開發者，我覺得它更易讀

418
00:13:57,100 --> 00:13:59,666
也更容易消化

419
00:13:59,666 --> 00:14:01,100
對，因為它就像一份配方，就是這樣

420
00:14:01,100 --> 00:14:03,033
它就是一份清單，對的

421
00:14:03,033 --> 00:14:04,800
就是一系列步驟，就是你的

422
00:14:04,800 --> 00:14:07,166
組件需要做的，這就是我們理解的

423
00:14:07,166 --> 00:14:08,000
方式

424
00:14:08,000 --> 00:14:10,066
知道如果它有一個

425
00:14:10,066 --> 00:14:12,133
開始，中間和結束，它就更容易被

426
00:14:12,133 --> 00:14:14,933
理解，易於消化

427
00:14:14,933 --> 00:14:16,233
是的，就是這樣

428
00:14:16,233 --> 00:14:18,133
以及當然我們會遇到的錯誤情況，

429
00:14:18,133 --> 00:14:19,900
我們也需要將錯誤情況列在裡面，

430
00:14:19,900 --> 00:14:22,700
我們有資料的輸入/輸出，

431
00:14:22,700 --> 00:14:24,633
例如，輸入是一個URL，

432
00:14:24,633 --> 00:14:28,066
而輸出就是 feed 項目，對嗎？

433
00:14:28,066 --> 00:14:29,833
但它並沒有說出它是一個 feed 項目的陣列，

434
00:14:29,833 --> 00:14:32,366
這需要由開發者決定，

435
00:14:32,366 --> 00:14:34,700
對，我們現在不知道這是否太高級以至於無法理解，

436
00:14:34,700 --> 00:14:36,066
說到底，現在你知道我們要如何

437
00:14:36,066 --> 00:14:37,433
實現這一點，儘管它讀起來有點像

438
00:14:37,433 --> 00:14:39,733
程序性的，

439
00:14:39,733 --> 00:14:40,866
步驟並不需要按照順序進行，

440
00:14:40,866 --> 00:14:43,733
這不一定要用程序語言來寫，

441
00:14:43,733 --> 00:14:45,100
你可以在這裡使用面向對象（OO），例如你可以

442
00:14:45,100 --> 00:14:47,833
採用函數式方法，

443
00:14:47,833 --> 00:14:49,333
我們可以有一群對象，

444
00:14:49,333 --> 00:14:50,800
共同合作以達成此目的，

445
00:14:50,800 --> 00:14:52,633
或者一群函數，或者是單子，

446
00:14:52,633 --> 00:14:55,900
對，這就是了，它可能看起來像是程序性的，但其實

447
00:14:55,900 --> 00:14:58,133
並不意味著

448
00:14:58,133 --> 00:14:58,933
那就是了。

449
00:14:58,933 --> 00:15:01,166
所有這些步驟將會發生

450
00:15:01,166 --> 00:15:02,366
按程序

451
00:15:02,366 --> 00:15:05,333
在一種方法中實現，當然不是

452
00:15:05,333 --> 00:15:06,533
當時機來臨

453
00:15:06,533 --> 00:15:09,500
我們將不得不深入一個更

454
00:15:09,500 --> 00:15:10,233
詳細的

455
00:15:10,233 --> 00:15:12,000
層級，我們將不得不

456
00:15:12,000 --> 00:15:13,666
遵循不同的原則

457
00:15:13,666 --> 00:15:15,900
這些原則談論

458
00:15:15,900 --> 00:15:17,166
代碼如何

459
00:15:17,166 --> 00:15:20,066
組織和編寫你的代碼，我們在這裡

460
00:15:20,066 --> 00:15:21,733
談論需求，我們在談論

461
00:15:21,733 --> 00:15:22,233
關於

462
00:15:22,233 --> 00:15:24,700
商業需求在這種情況下，

463
00:15:24,700 --> 00:15:25,500
它是開放的

464
00:15:25,500 --> 00:15:28,700
是的，這是一種算法，但它是開放的

465
00:15:28,700 --> 00:15:30,866
我們將如何實現它和

466
00:15:30,866 --> 00:15:32,066
另一個例子

467
00:15:32,066 --> 00:15:34,133
擴大用例，我們可以擁有一個

468
00:15:34,133 --> 00:15:35,166
單獨的用例

469
00:15:35,166 --> 00:15:37,100
那就是執行 Load Feed Fallback 如果

470
00:15:37,100 --> 00:15:38,800
Load Feed失敗

471
00:15:38,800 --> 00:15:40,800
所以它是為了離線客戶

472
00:15:40,800 --> 00:15:42,066
再次跟隨

473
00:15:42,066 --> 00:15:45,100
這種算法方法，我們有一個

474
00:15:45,100 --> 00:15:47,500
首要的方法就是美好的過程

475
00:15:47,500 --> 00:15:51,333
用來指定什麼是食譜

476
00:15:51,333 --> 00:15:54,700
針對檢索feed項目的情況並且

477
00:15:54,700 --> 00:15:58,000
再次我們確定了如果我們

478
00:15:58,000 --> 00:15:58,700
沒有

479
00:15:58,700 --> 00:16:01,833
一個快取或我們的快取中沒有項目

480
00:16:01,833 --> 00:16:02,533
在這種情況下

481
00:16:02,533 --> 00:16:05,733
那麼我們就不會傳遞任何feed項目

482
00:16:05,733 --> 00:16:07,833
是的，那什麼是沒有feed項目呢

483
00:16:07,833 --> 00:16:09,033
這取決於開發者

484
00:16:09,033 --> 00:16:11,666
再次確實任何人都可以理解這一點

485
00:16:11,666 --> 00:16:13,166
儘管這更技術化

486
00:16:13,166 --> 00:16:15,600
比BDD風格是的，它補充

487
00:16:15,600 --> 00:16:16,800
了BDD風格

488
00:16:16,800 --> 00:16:18,866
通過橋接並進一步接近

489
00:16:18,866 --> 00:16:21,033
技術方面

490
00:16:21,033 --> 00:16:24,466
當它被寫出和讀取時

491
00:16:24,466 --> 00:16:26,866
由商業人士，它提高了質量

492
00:16:26,866 --> 00:16:28,066
由流程

493
00:16:28,066 --> 00:16:30,066
的確，它便利化了整個

494
00:16:30,066 --> 00:16:32,133
開發過程

495
00:16:32,133 --> 00:16:34,800
並且它確實提高了溝通

496
00:16:34,800 --> 00:16:36,300
只為了更精確一點，並不僅僅是

497
00:16:36,300 --> 00:16:38,000
商業人士寫它，但是

498
00:16:38,000 --> 00:16:40,133
與開發者共同合作時

499
00:16:40,133 --> 00:16:41,666
當他們兩人坐下來一起寫這個時

500
00:16:41,666 --> 00:16:42,633
一起


501
00:16:42,633 --> 00:16:44,233
對，這些都只是角色而已，

502
00:16:44,233 --> 00:16:46,066
並不表示開發者不能成為 

503
00:16:46,066 --> 00:16:47,033
一個

504
00:16:47,033 --> 00:16:49,333
你知道的，被引號括起來的 "商業人士"

505
00:16:49,333 --> 00:16:50,366
對，你可以的

506
00:16:50,366 --> 00:16:52,466
對，這些只不过是角色，我是指

507
00:16:52,466 --> 00:16:53,900
通常會有不同的人扮演

508
00:16:53,900 --> 00:16:56,366
擔任這些角色，

509
00:16:56,366 --> 00:16:59,333
但是，那也可能是，最後一個

510
00:16:59,333 --> 00:17:00,466
使用場景是

511
00:17:00,466 --> 00:17:03,600
將 Feed Items 儲存到

512
00:17:03,600 --> 00:17:04,066
快取中

513
00:17:04,066 --> 00:17:06,466
我們執行儲存物品的命令

514
00:17:06,466 --> 00:17:07,500
與數據一起

515
00:17:07,500 --> 00:17:09,100
然後系統將會

516
00:17:09,100 --> 00:17:10,700
將物品進行編碼我們將會

517
00:17:10,700 --> 00:17:11,733
時間戳記它

518
00:17:11,733 --> 00:17:13,033
將新的數據替換掉快取，然後傳送成功

519
00:17:13,033 --> 00:17:15,166
的訊息，對

520
00:17:15,166 --> 00:17:16,066
是的，

521
00:17:16,066 --> 00:17:17,666
如果你有這項需求，不是 

522
00:17:17,666 --> 00:17:20,400
實裝這項功能會更簡單嗎

523
00:17:20,400 --> 00:17:22,400
而現在，如果你沒有 15 分鐘到 

524
00:17:22,400 --> 00:17:23,500
半小時

525
00:17:23,500 --> 00:17:25,733
來結合好的需求，你

526
00:17:25,733 --> 00:17:26,866
有更大的問題

527
00:17:26,866 --> 00:17:30,066
確實，比起差勁的需要，是的，是的

528
00:17:30,066 --> 00:17:31,566
對，那裡有些事情不對勁

529
00:17:31,566 --> 00:17:33,666
那需要被解決

530
00:17:33,666 --> 00:17:36,233
但看看我們所提出的所有細節

531
00:17:36,233 --> 00:17:37,500
來自

532
00:17:37,500 --> 00:17:39,733
一個基本的故事，那就是流程

533
00:17:39,733 --> 00:17:41,333
你開始一個壞故事

534
00:17:41,333 --> 00:17:44,233
並且你與之協作來改進它

535
00:17:44,233 --> 00:17:45,433
和業務

536
00:17:45,433 --> 00:17:48,533
目標是粉碎假設並且

537
00:17:48,533 --> 00:17:49,900
那就是這個

538
00:17:49,900 --> 00:17:53,333
流程做的，你消除它們

539
00:17:53,333 --> 00:17:55,666
你對系統了解得越來越多

540
00:17:55,666 --> 00:17:56,633
和對需求以及客戶的需求的了解

541
00:17:56,633 --> 00:17:58,700
以及關於什麼

542
00:17:58,700 --> 00:18:00,466
客戶需要

543
00:18:00,466 --> 00:18:03,666
這就是為什麼我們相信它如此有價值

544
00:18:03,666 --> 00:18:06,000
甚至還有其他方式來表達

545
00:18:06,000 --> 00:18:07,666
這些需求，以提高

546
00:18:07,666 --> 00:18:10,933
分享知識，對，其他觀點

547
00:18:10,933 --> 00:18:13,100
絕對的，就像流程圖

548
00:18:13,100 --> 00:18:14,000
例如

549
00:18:14,000 --> 00:18:16,133
與壞故事工作的另一個問題是

550
00:18:16,133 --> 00:18:17,266
那是

551
00:18:17,266 --> 00:18:19,100
你如何為這個故事製作流程圖

552
00:18:19,100 --> 00:18:21,100
例如從這個故事中

553
00:18:21,100 --> 00:18:24,233
對，那將會是序列的，非常線性的

554
00:18:24,233 --> 00:18:24,533
對

555
00:18:24,533 --> 00:18:27,600
非常線性的，顯示feed screen

556
00:18:27,600 --> 00:18:30,533
取得最新項目，更新屏幕，獲益

557
00:18:30,533 --> 00:18:31,200
對

558
00:18:31,200 --> 00:18:35,500
也許吧，希望如此

559
00:18:35,500 --> 00:18:38,000
這就像是我們正在實施的路徑嗎

560
00:18:38,000 --> 00:18:39,100
這裡的實施

561
00:18:39,100 --> 00:18:41,033
我不認為是因為真實的 

562
00:18:41,033 --> 00:18:43,100
價值更明確定義

563
00:18:43,100 --> 00:18:45,200
在這份詳細的文件中，現在如果我們

564
00:18:45,200 --> 00:18:46,400
繪製一個流程圖

565
00:18:46,400 --> 00:18:49,333
從詳細的要求中，那將會

566
00:18:49,333 --> 00:18:50,633
描述得更詳盡

567
00:18:50,633 --> 00:18:53,433
就像這張，瞧，我們如何顯示

568
00:18:53,433 --> 00:18:54,400
feed screen

569
00:18:54,400 --> 00:18:56,866
我們取得新項目，然後我們有

570
00:18:56,866 --> 00:18:58,066
不同的路徑

571
00:18:58,066 --> 00:19:01,333
從那裡，對，如果成功，我們就儲存

572
00:19:01,333 --> 00:19:02,700
新的項目

573
00:19:02,700 --> 00:19:05,033
並且更新這個feed，如果它沒有

574
00:19:05,033 --> 00:19:06,933
成功取得新的項目

575
00:19:06,933 --> 00:19:09,033
那麼我們試圖從緩存中加載它

576
00:19:09,033 --> 00:19:10,133
並更新feed screen

577
00:19:10,133 --> 00:19:12,233
對，這是更加描述性的，還有

578
00:19:12,233 --> 00:19:13,600
任何人都能了解這個

579
00:19:13,600 --> 00:19:15,333
我可以向業務部門的任何人展示這個

580
00:19:15,333 --> 00:19:17,033
我也可以向開發者展示這個,它非常清楚，但是

582
00:19:19,733 --> 00:19:21,666
我們只能透過理解

583
00:19:21,666 --> 00:19:22,933
我們正在建造的是什麼，然後我們可以

585
00:19:24,533 --> 00:19:26,400
將細節要求表示出來 

586
00:19:26,400 --> 00:19:29,433
以不同的視覺形式，其中之一

587
00:19:29,433 --> 00:19:30,066
就是

588
00:19:30,066 --> 00:19:34,533
我們所喜愛的模塊化建築結構

589
00:19:34,533 --> 00:19:38,066
所以看，我們從這個

590
00:19:38,066 --> 00:19:40,466
要求太籠統，你知道的，要求的概略版開始，然後我們

591
00:19:40,466 --> 00:19:41,900
深入了解，我們深入了解

593
00:19:43,500 --> 00:19:46,400
最後，我們回到了這個

594
00:19:46,400 --> 00:19:47,200
設計

595
00:19:47,200 --> 00:19:49,833
這是整個過程的副產品

596
00:19:49,833 --> 00:19:50,766
拆解要求，並

598
00:19:53,033 --> 00:19:54,300
結束於

599
00:19:54,300 --> 00:19:56,866
此處，建築設計是

600
00:19:56,866 --> 00:19:58,233
源於 

601
00:19:58,233 --> 00:20:00,066
要求，透過獲得更好的

602
00:20:00,066 --> 00:20:02,233
要求，我們更加理解

603
00:20:02,233 --> 00:20:03,500
問題，我們更加理解

604
00:20:03,500 --> 00:20:05,200
價值定位，我們甚至可能


605
00:20:05,200 --> 00:20:06,000
更好地理解

606
00:20:06,000 --> 00:20:07,666
這產品如何在未來

607
00:20:07,666 --> 00:20:10,000
演進，這樣我們就能提出更好的

608
00:20:10,000 --> 00:20:12,400
code設計，這一切都 

609
00:20:12,400 --> 00:20:13,333
相互關連

610
00:20:13,333 --> 00:20:16,233
您不能分開architecture，也不能

611
00:20:16,233 --> 00:20:16,866
分開

612
00:20:16,866 --> 00:20:18,766
testing，您也不能分開value，我們

613
00:20:18,766 --> 00:20:20,133
不能分開business，也不能

614
00:20:20,133 --> 00:20:21,333
分開developers

615
00:20:21,333 --> 00:20:23,600
所有的一切都連在一起，所以唯一的方式

616
00:20:23,600 --> 00:20:25,433
提出好的解決方案

617
00:20:25,433 --> 00:20:27,900
就是必須有良好的溝通，絕對的

618
00:20:27,900 --> 00:20:29,100
在我看來這是

619
00:20:29,100 --> 00:20:30,766
最重要的一點

620
00:20:30,766 --> 00:20:32,633
了解正在發生的事情

621
00:20:32,633 --> 00:20:34,466
去除假設，我知道我們

622
00:20:34,466 --> 00:20:36,866
提到了很多次，但這是事實

623
00:20:36,866 --> 00:20:39,200
所以，我們需要找到一種方式

624
00:20:39,200 --> 00:20:40,633
消除這些假設

625
00:20:40,633 --> 00:20:43,033
和我們的團隊以及

626
00:20:43,033 --> 00:20:43,900
developer團隊

627
00:20:43,900 --> 00:20:47,100
與其他團隊甚至更好的溝通，這就是

628
00:20:47,100 --> 00:20:47,733
過程

629
00:20:47,733 --> 00:20:49,833
如你所說，這並不需要太多，我

630
00:20:49,833 --> 00:20:51,200
的意思是當然


631
00:20:51,200 --> 00:20:53,266
當你剛開始時，它將需要

632
00:20:53,266 --> 00:20:54,300
大量的時間

633
00:20:54,300 --> 00:20:56,766
就像我們做的任何事情一樣

634
00:20:56,766 --> 00:20:58,000
你會進步對吧 

635
00:20:58,000 --> 00:21:01,333
而像這樣的特性

636
00:21:01,333 --> 00:21:02,933
15分鐘，20分鐘是

637
00:21:02,933 --> 00:21:04,866
絕對足夠的

638
00:21:04,866 --> 00:21:06,933
即使它花費更長的時間對嗎，如果它

639
00:21:06,933 --> 00:21:07,900
需要 

640
00:21:07,900 --> 00:21:11,033
也許是一個小時，兩個小時只要它

641
00:21:11,033 --> 00:21:12,066
值得

642
00:21:12,066 --> 00:21:14,233
只要我們收集到我們

643
00:21:14,233 --> 00:21:15,200
需要的需求

644
00:21:15,200 --> 00:21:18,066
是的，絕對，那句話是怎麼說的，如果我

645
00:21:18,066 --> 00:21:19,033
有六個小時

646
00:21:19,033 --> 00:21:21,333
要砍倒一棵樹，我會花四個

647
00:21:21,333 --> 00:21:22,400
小時

648
00:21:22,400 --> 00:21:25,200
來磨刀對吧，那就是這裡

649
00:21:25,200 --> 00:21:25,900
的道理

650
00:21:25,900 --> 00:21:28,233
這裡基本上是同樣的事情，而且我們

651
00:21:28,233 --> 00:21:29,266
做這個

652
00:21:29,266 --> 00:21:33,033
是為了盡量消除風險

653
00:21:33,033 --> 00:21:34,866
盡我們所能，我們會嘗試

654
00:21:34,866 --> 00:21:36,766
消除犯錯的風險

655
00:21:36,766 --> 00:21:39,266
因為錯誤是花費

656
00:21:39,266 --> 00:21:40,133
企業

657
00:21:40,133 --> 00:21:42,933
大量金錢的原因，我們不應該

658
00:21:42,933 --> 00:21:45,433
成為讓企業損失大量金錢的共犯

659
00:21:45,433 --> 00:21:46,233
的一員

660
00:21:46,233 --> 00:21:48,000
因為我們終究是在傷害自己，

661
00:21:48,000 --> 00:21:50,000
溝通在這裡

662
00:21:50,000 --> 00:21:52,400
很關鍵，所以我們現在已經設置了這個

663
00:21:52,400 --> 00:21:53,100
基礎

664
00:21:53,100 --> 00:21:55,666
為我們建議的架構，讓我們在這裡停下

665
00:21:55,666 --> 00:21:57,033
然後在下一集

666
00:21:57,033 --> 00:21:59,833
我們可以開始實際地實施它

667
00:21:59,833 --> 00:22:00,300
是的

668
00:22:00,300 --> 00:22:01,833
等不及了，我們將在

669
00:22:01,833 --> 00:22:13,900
下次再見
