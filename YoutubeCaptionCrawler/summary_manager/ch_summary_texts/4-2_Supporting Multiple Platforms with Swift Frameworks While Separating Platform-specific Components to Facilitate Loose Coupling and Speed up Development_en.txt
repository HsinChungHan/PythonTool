1. 本次講座的重點是為所有EssentialFeed目標添加對iOS平臺的支持，以準備iOS組件。
2. EssentialFeed目標之前只支持macOS。然而，這些目標內的代碼與macOS平臺無關，使其兼容其他受支持的平臺。
3. 他們在構建設置中添加iphoneos和iphonesimulator作為受支持的平臺，使項目可以為模擬器或iPhone設備構建。
4. 他們通過為測試目標添加iphoneos和iphonesimulator來解決無法運行測試的問題，使測試可以在iPhone模擬器上運行。
5. 他們建議也可以根據需要為其他平臺添加支持，如iPadOS，watchOS，tvOS等。
6. EssentialFeed和EssentialFeedTests目標修改以支持macOS和iOS，確保平臺獨立性。
7. 他們將iOS添加為API端到端測試目標的受支持平臺，以保證在所有平臺上的相似行為。
8. 他們承認在運行特定平臺時可能會出現錯誤，因此在所有平臺上運行所有測試非常重要。
9. 他們為API端到端測試目標創建一個新的方案，以便單獨運行這些測試。
10. 他們承諾讓EssentialFeedAPI EndToEndTests目標也支持macOS和iOS。
11. 在同一項目中，他們為構建iOS用戶界面並添加iOS特定組件而創建一個新的iOS特定目標，而不影響平臺獨立組件。
12. 在創建組件時，他們決定是製作一個iOS應用程序還是隻為iOS組件製作一個框架。
13. iOS UI元素被創建為組件，需要時可以組合，在稱為組件的組合根中。
14. 為了確保他們在iOS目標中包含單元測試，他們為iOS特定組件創建了生產和測試目標。
15. 他們將EssentialFeed iOS方案與測試設置配置，刪除所有未使用的模板文件。
16. 他們更新他們的持續集成（CI）配置以在兩個平臺上運行測試。
17. 在CI配置中，他們為macOS和iOS創建單獨的方案，以在CI服務器上運行iOS平臺的測試時包括iOS特定的測試。
18. 由於添加平臺支持，他們承認服務器費用增加，並建議將項目分解為單獨的項目和模塊以降低成本，並導致編譯和集成時間更快。
19. 本講座以提醒平衡增加平臺支持的成本和建立和集成時間的速度而結束。